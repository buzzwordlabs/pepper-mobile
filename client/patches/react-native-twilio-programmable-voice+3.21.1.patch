diff --git a/node_modules/react-native-twilio-programmable-voice/android/settings.gradle b/node_modules/react-native-twilio-programmable-voice/.DS_Store
similarity index 100%
rename from node_modules/react-native-twilio-programmable-voice/android/settings.gradle
rename to node_modules/react-native-twilio-programmable-voice/.DS_Store
diff --git a/node_modules/react-native-twilio-programmable-voice/README.md b/node_modules/react-native-twilio-programmable-voice/README.md
index b0e65d0..05179f6 100644
--- a/node_modules/react-native-twilio-programmable-voice/README.md
+++ b/node_modules/react-native-twilio-programmable-voice/README.md
@@ -3,41 +3,13 @@ This is a React Native wrapper for Twilio Programmable Voice SDK that lets you m
 
 # Twilio Programmable Voice SDK
 
-- Android 2.0.7 (bundled within this library)
-- iOS 2.0.4 (specified by the app's own podfile)
+- Android 2.1.0 (bundled within this library)
+- iOS 5.1.1 (specified by the app's own podfile; min. version 5.x)
 
-## Breaking changes in v3.0.0
-
-- initWitToken returns an object with a property `initialized` instead of `initilized`
-- iOS event `connectionDidConnect` returns the same properties as Android
-move property `to` => `call_to`
-move property `from` => `call_from`
-
-## Migrating Android from v1 to v2 (incoming call use FCM)
-
-You will need to make changes both on your Twilio account using Twilio Web Console and on your react native app.
-Twilio Programmable Voice Android SDK uses `FCM` since version 2.0.0.beta5.
-
-Before you start, I strongly suggest that you read the list of Twilio changes from Android SDK v2.0.0 beta4 to beta5:
-[Twilio example App: Migrating from GCM to FCM](https://github.com/twilio/voice-quickstart-android/blob/d7d4f0658e145eb94ab8f5e34f6fd17314e7ab17/README.md#migrating-from-gcm-to-fcm)
-
-These are all the changes required:
-
-- remove all the GCM related code from your `AndroidManifest.xml` and add the following code to receive `FCM` notifications
-(I wasn't successful in keeping react-native-fcm working at the same time. If you know how please open an issue to share).
+## Breaking changes in v4.0.0
 
+- Android: remove the following block from your application's `AndroidManifest.xml`
 ```xml
-    .....
-
-    <!-- Twilio Voice -->
-    <!-- [START fcm_listener] -->
-    <service
-        android:name="com.hoxfon.react.TwilioVoice.fcm.VoiceFirebaseMessagingService">
-        <intent-filter>
-            <action android:name="com.google.firebase.MESSAGING_EVENT" />
-        </intent-filter>
-    </service>
-    <!-- [END fcm_listener] -->
     <!-- [START instanceId_listener] -->
     <service
         android:name="com.hoxfon.react.TwilioVoice.fcm.VoiceFirebaseInstanceIDService"
@@ -47,15 +19,20 @@ These are all the changes required:
         </intent-filter>
     </service>
     <!-- [END instanceId_listener] -->
-    <!-- Twilio Voice -->
 ```
 
-- log into your Firebase console. Navigate to: Project settings > CLOUD MESSAGING. Copy your `Server key`
-- in Twilio console add a new Push Credential, type `FCM`, fcm secret Firebase FCM `Server key`
-- include in your project `google-services.json`; if you have not include it yet
-- rename getIncomingCall() to getActiveCall()
+- iOS: params changes for `connectionDidConnect` and `connectionDidDisconnect`
+
+    to => call_to
+    from => call_from
+    error => err
+
+## Breaking changes in v3.0.0
 
-If something doesn't work as expected or you want to make a request open an issue.
+- initWitToken returns an object with a property `initialized` instead of `initilized`
+- iOS event `connectionDidConnect` returns the same properties as Android
+move property `to` => `call_to`
+move property `from` => `call_from`
 
 ## Help wanted!
 
@@ -90,7 +67,7 @@ platform :ios, '8.1'
 
 target <YOUR_TARGET> do
     ...
-    pod 'TwilioVoice', '~> 2.0.0'
+    pod 'TwilioVoice', '~> 5.1.1'
     ...
 end
 
@@ -105,11 +82,11 @@ Edit your `Podfile` to include TwilioVoice and RNTwilioVoice frameworks
 source 'https://github.com/cocoapods/specs'
 
 # min version for TwilioVoice to work
-platform :ios, '8.1'
+platform :ios, '9.0'
 
 target <YOUR_TARGET> do
     ...
-    pod 'TwilioVoice', '~> 2.0.0'
+    pod 'TwilioVoice', '~> 2.1.0'
     pod 'RNTwilioVoice', path: '../node_modules/react-native-twilio-programmable-voice'
     ...
 end
@@ -220,8 +197,8 @@ public class MainApplication extends Application implements ReactApplication {
         protected List<ReactPackage> getPackages() {
             return Arrays.<ReactPackage>asList(
                 new MainReactPackage(),
-                new TwilioVoicePackage()         // <---- Add the Package : by default it will ask microphone permissions
-                // new TwilioVoicePackage(false) // <---- pass false to handle microphone permissions in your application
+                new TwilioVoicePackage()         // <---- Add the package
+                // new TwilioVoicePackage(false) // <---- pass false if you don't want to ask for microphone permissions
             );
         }
     };
diff --git a/node_modules/react-native-twilio-programmable-voice/RNTwilioVoice.podspec b/node_modules/react-native-twilio-programmable-voice/RNTwilioVoice.podspec
index 9b80fac..b88bc5e 100644
--- a/node_modules/react-native-twilio-programmable-voice/RNTwilioVoice.podspec
+++ b/node_modules/react-native-twilio-programmable-voice/RNTwilioVoice.podspec
@@ -9,12 +9,12 @@ Pod::Spec.new do |s|
   s.authors      = spec['author']['name']
   s.homepage     = spec['homepage']
   s.license      = spec['license']
-  s.platform     = :ios, "8.1"
+  s.platform     = :ios, "10.0"
 
   s.source_files = [ "ios/RNTwilioVoice/*.h", "ios/RNTwilioVoice/*.m"]
   s.source = {:path => "./RNTwilioVoice"}
 
-  s.dependency 'React'
-  s.xcconfig = { 'FRAMEWORK_SEARCH_PATHS' => '${PODS_ROOT}/TwilioVoice' }
-  s.frameworks   = 'TwilioVoice'
+  s.dependency "React"
+  s.xcconfig = { "FRAMEWORK_SEARCH_PATHS" => "\"${PODS_ROOT}/TwilioVoice/Build/iOS\"" }
+  s.frameworks   = "TwilioVoice"
 end
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/executionHistory/executionHistory.bin b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/executionHistory/executionHistory.bin
new file mode 100644
index 0000000..89e3ec5
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/executionHistory/executionHistory.bin differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/executionHistory/executionHistory.lock b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/executionHistory/executionHistory.lock
new file mode 100644
index 0000000..2535e6b
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/executionHistory/executionHistory.lock differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileChanges/last-build.bin b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileChanges/last-build.bin
new file mode 100644
index 0000000..f76dd23
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileChanges/last-build.bin differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileHashes/fileHashes.bin b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileHashes/fileHashes.bin
new file mode 100644
index 0000000..396284b
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileHashes/fileHashes.bin differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileHashes/fileHashes.lock b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileHashes/fileHashes.lock
new file mode 100644
index 0000000..be7b779
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/fileHashes/fileHashes.lock differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/gc.properties b/node_modules/react-native-twilio-programmable-voice/android/.gradle/5.4.1/gc.properties
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock b/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock
new file mode 100644
index 0000000..8133a01
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/buildOutputCleanup.lock differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/cache.properties b/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/cache.properties
new file mode 100644
index 0000000..1aeaa9c
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/cache.properties
@@ -0,0 +1,2 @@
+#Wed Jan 15 20:22:25 MST 2020
+gradle.version=5.4.1
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/outputFiles.bin b/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/outputFiles.bin
new file mode 100644
index 0000000..92642bb
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.gradle/buildOutputCleanup/outputFiles.bin differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.gradle/vcs-1/gc.properties b/node_modules/react-native-twilio-programmable-voice/android/.gradle/vcs-1/gc.properties
new file mode 100644
index 0000000..e69de29
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/caches/build_file_checksums.ser b/node_modules/react-native-twilio-programmable-voice/android/.idea/caches/build_file_checksums.ser
new file mode 100644
index 0000000..580b03a
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.idea/caches/build_file_checksums.ser differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/caches/gradle_models.ser b/node_modules/react-native-twilio-programmable-voice/android/.idea/caches/gradle_models.ser
new file mode 100644
index 0000000..17cbcf9
Binary files /dev/null and b/node_modules/react-native-twilio-programmable-voice/android/.idea/caches/gradle_models.ser differ
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/codeStyles/Project.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/codeStyles/Project.xml
new file mode 100644
index 0000000..ae78c11
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/codeStyles/Project.xml
@@ -0,0 +1,113 @@
+<component name="ProjectCodeStyleConfiguration">
+  <code_scheme name="Project" version="173">
+    <codeStyleSettings language="XML">
+      <arrangement>
+        <rules>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>xmlns:android</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>xmlns:.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*:id</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*:name</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>name</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>style</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>^$</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>http://schemas.android.com/apk/res/android</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>ANDROID_ATTRIBUTE_ORDER</order>
+            </rule>
+          </section>
+          <section>
+            <rule>
+              <match>
+                <AND>
+                  <NAME>.*</NAME>
+                  <XML_ATTRIBUTE />
+                  <XML_NAMESPACE>.*</XML_NAMESPACE>
+                </AND>
+              </match>
+              <order>BY_NAME</order>
+            </rule>
+          </section>
+        </rules>
+      </arrangement>
+    </codeStyleSettings>
+  </code_scheme>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/gradle.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/gradle.xml
new file mode 100644
index 0000000..e22b572
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/gradle.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="GradleSettings">
+    <option name="linkedExternalProjectsSettings">
+      <GradleProjectSettings>
+        <compositeConfiguration>
+          <compositeBuild compositeDefinitionSource="SCRIPT" />
+        </compositeConfiguration>
+        <option name="distributionType" value="DEFAULT_WRAPPED" />
+        <option name="externalProjectPath" value="$PROJECT_DIR$" />
+        <option name="modules">
+          <set>
+            <option value="$PROJECT_DIR$" />
+          </set>
+        </option>
+        <option name="resolveModulePerSourceSet" value="false" />
+        <option name="testRunner" value="PLATFORM" />
+      </GradleProjectSettings>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_common_1_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_common_1_0_0_jar.xml
new file mode 100644
index 0000000..0647ff1
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_common_1_0_0_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.core:common:1.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.core/common/1.0.0/a2d487452376193fc8c103dd2b9bd5f2b1b44563/common-1.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.core/common/1.0.0/a41fa3b9a66f3bdd41f98013a1688e969072aaf2/common-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_common_1_1_1_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_common_1_1_1_jar.xml
new file mode 100644
index 0000000..bf16fff
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_common_1_1_1_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.core:common:1.1.1@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.core/common/1.1.1/e55b70d1f5620db124b3e85a7f4bdc7bd48d9f95/common-1.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.core/common/1.1.1/ae9b923fc99c1fc5a7a9b6cedc6df8b2b8529c54/common-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_runtime_1_1_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_runtime_1_1_1_aar.xml
new file mode 100644
index 0000000..90f269f
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_core_runtime_1_1_1_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.core:runtime:1.1.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/05779e24ff6cd22d44a86adbf111bdc3/runtime-1.1.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/05779e24ff6cd22d44a86adbf111bdc3/runtime-1.1.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.core/runtime/1.1.1/25df553df10af32bede9dd768a2d15299543d84/runtime-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_common_1_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_common_1_0_0_jar.xml
new file mode 100644
index 0000000..7d25f6b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_common_1_0_0_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:common:1.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/common/1.0.0/e414a4cb28434e25c4f6aa71426eb20cf4874ae9/common-1.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/common/1.0.0/39ce4055689b4b766478265a8c661f4165f26dc3/common-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_common_1_1_1_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_common_1_1_1_jar.xml
new file mode 100644
index 0000000..27b1867
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_common_1_1_1_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:common:1.1.1@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/common/1.1.1/207a6efae6a3555e326de41f76bdadd9a239cbce/common-1.1.1.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/common/1.1.1/bcdaa509a856d1430e736b102f899aa9870a8f83/common-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_livedata_1_1_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_livedata_1_1_1_aar.xml
new file mode 100644
index 0000000..c59129b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_livedata_1_1_1_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:livedata:1.1.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3be66ca3acb1985b61d2a8a79b87a8cd/livedata-1.1.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3be66ca3acb1985b61d2a8a79b87a8cd/livedata-1.1.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/livedata/1.1.1/bf27acaa4953c98cd519756ed7b7caacf94407d4/livedata-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_livedata_core_1_1_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_livedata_core_1_1_1_aar.xml
new file mode 100644
index 0000000..fe16cfb
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_livedata_core_1_1_1_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:livedata-core:1.1.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/65328583d6548bca3897a48cd2447274/livedata-core-1.1.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/65328583d6548bca3897a48cd2447274/livedata-core-1.1.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/livedata-core/1.1.1/c38818e006ea7a408c05e3090364332d46494ef/livedata-core-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_runtime_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_runtime_1_0_0_aar.xml
new file mode 100644
index 0000000..3285905
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_runtime_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:runtime:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/20374d649b592c76371ea2e992b5bbca/runtime-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/20374d649b592c76371ea2e992b5bbca/runtime-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/runtime/1.0.0/1dd0298d8c45d8dfa4d038270247327f23df7a3a/runtime-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_runtime_1_1_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_runtime_1_1_1_aar.xml
new file mode 100644
index 0000000..dbcb61f
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_runtime_1_1_1_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:runtime:1.1.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d8f4ae3effb429083719fdec7f8bf044/runtime-1.1.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d8f4ae3effb429083719fdec7f8bf044/runtime-1.1.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/runtime/1.1.1/8e4214221b3797b863dc9998d16abb4af043e784/runtime-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_viewmodel_1_1_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_viewmodel_1_1_1_aar.xml
new file mode 100644
index 0000000..9ac35e7
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__android_arch_lifecycle_viewmodel_1_1_1_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: android.arch.lifecycle:viewmodel:1.1.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/9654145e975edd0d4e9807c6461950ed/viewmodel-1.1.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/9654145e975edd0d4e9807c6461950ed/viewmodel-1.1.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/android.arch.lifecycle/viewmodel/1.1.1/d1cc8e805317f171be63c68341f499acda7e42d6/viewmodel-1.1.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_annotation_annotation_1_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_annotation_annotation_1_0_0_jar.xml
new file mode 100644
index 0000000..3740751
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_annotation_annotation_1_0_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.annotation:annotation:1.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.annotation/annotation/1.0.0/45599f2cd5965ac05a1488fa2a5c0cdd7c499ead/annotation-1.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.annotation/annotation/1.0.0/3ad9d83e5da3918fd93775080f401222f2d4d26a/annotation-1.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.annotation/annotation/1.0.0/c5897dbbda33e66ca6f3224a2534891bbfcbda5a/annotation-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_appcompat_appcompat_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_appcompat_appcompat_1_0_0_aar.xml
new file mode 100644
index 0000000..8cff99b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_appcompat_appcompat_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.appcompat:appcompat:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3ae3b2541271b4c0da0a1279b436b3cf/appcompat-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3ae3b2541271b4c0da0a1279b436b3cf/appcompat-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3ae3b2541271b4c0da0a1279b436b3cf/appcompat-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.appcompat/appcompat/1.0.0/1deaac9c124b19a14ebaf64780e7087d561541bd/appcompat-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_arch_core_core_common_2_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_arch_core_core_common_2_0_0_jar.xml
new file mode 100644
index 0000000..83e1a45
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_arch_core_core_common_2_0_0_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.arch.core:core-common:2.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.arch.core/core-common/2.0.0/bb21b9a11761451b51624ac428d1f1bb5deeac38/core-common-2.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.arch.core/core-common/2.0.0/645b95386a07be66eef0bfe7007535e3f95ec642/core-common-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_arch_core_core_runtime_2_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_arch_core_core_runtime_2_0_0_aar.xml
new file mode 100644
index 0000000..4bc857c
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_arch_core_core_runtime_2_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.arch.core:core-runtime:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b9053f481f6d09d6b0325c41025a2cd9/core-runtime-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b9053f481f6d09d6b0325c41025a2cd9/core-runtime-2.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.arch.core/core-runtime/2.0.0/bc41b287c95bc50a3cd27cb1b7cfb301805ba7f1/core-runtime-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_asynclayoutinflater_asynclayoutinflater_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_asynclayoutinflater_asynclayoutinflater_1_0_0_aar.xml
new file mode 100644
index 0000000..b15f6e8
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_asynclayoutinflater_asynclayoutinflater_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.asynclayoutinflater:asynclayoutinflater:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a1079c7fbe6a9a0a1066925b6507eb74/asynclayoutinflater-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a1079c7fbe6a9a0a1066925b6507eb74/asynclayoutinflater-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.asynclayoutinflater/asynclayoutinflater/1.0.0/ac4d50701fce5c88dcc514f58e695cd32f05134c/asynclayoutinflater-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_collection_collection_1_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_collection_collection_1_0_0_jar.xml
new file mode 100644
index 0000000..2fee65b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_collection_collection_1_0_0_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.collection:collection:1.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.collection/collection/1.0.0/42858b26cafdaa69b6149f45dfc2894007bc2c7a/collection-1.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.collection/collection/1.0.0/b08973c283f1a0b29fce8b45a1e31e16a36611e9/collection-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_coordinatorlayout_coordinatorlayout_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_coordinatorlayout_coordinatorlayout_1_0_0_aar.xml
new file mode 100644
index 0000000..a1cffab
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_coordinatorlayout_coordinatorlayout_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.coordinatorlayout:coordinatorlayout:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fa01b882334f7262ea8e3e7268311095/coordinatorlayout-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fa01b882334f7262ea8e3e7268311095/coordinatorlayout-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fa01b882334f7262ea8e3e7268311095/coordinatorlayout-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.coordinatorlayout/coordinatorlayout/1.0.0/4325b3c4422ad58201ed8dc15ae56bda9accedf2/coordinatorlayout-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_core_core_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_core_core_1_0_0_aar.xml
new file mode 100644
index 0000000..4aede69
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_core_core_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.core:core:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/64b7781469d232890798202388df5fc9/core-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/64b7781469d232890798202388df5fc9/core-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/64b7781469d232890798202388df5fc9/core-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.core/core/1.0.0/a23a5f203e97d91666c374e408053b1878de3bff/core-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_cursoradapter_cursoradapter_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_cursoradapter_cursoradapter_1_0_0_aar.xml
new file mode 100644
index 0000000..9653810
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_cursoradapter_cursoradapter_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.cursoradapter:cursoradapter:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a5cc52281db0c619acb263f3ec9583e2/cursoradapter-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a5cc52281db0c619acb263f3ec9583e2/cursoradapter-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.cursoradapter/cursoradapter/1.0.0/1e323083b41c31fd4d45510dfce50614963c3c6c/cursoradapter-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_customview_customview_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_customview_customview_1_0_0_aar.xml
new file mode 100644
index 0000000..47ffedc
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_customview_customview_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.customview:customview:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3c570a0a75f7bdf20ec22b30af040369/customview-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3c570a0a75f7bdf20ec22b30af040369/customview-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.customview/customview/1.0.0/61f6a717d144dff3a6bda413d9abeeb2bca71581/customview-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_documentfile_documentfile_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_documentfile_documentfile_1_0_0_aar.xml
new file mode 100644
index 0000000..54a9978
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_documentfile_documentfile_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.documentfile:documentfile:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/197553ab9f2fbb988661865532230777/documentfile-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/197553ab9f2fbb988661865532230777/documentfile-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.documentfile/documentfile/1.0.0/a1bed5cf96db96bd06a2feade98fe55653811dc8/documentfile-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_drawerlayout_drawerlayout_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_drawerlayout_drawerlayout_1_0_0_aar.xml
new file mode 100644
index 0000000..72d4a29
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_drawerlayout_drawerlayout_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.drawerlayout:drawerlayout:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6effe2cbf16174b668e3e1d0cfddf644/drawerlayout-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6effe2cbf16174b668e3e1d0cfddf644/drawerlayout-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6effe2cbf16174b668e3e1d0cfddf644/drawerlayout-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.drawerlayout/drawerlayout/1.0.0/9ecd4ecb7da215ba4c5c3e00bf8d290dad6f2bc5/drawerlayout-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_fragment_fragment_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_fragment_fragment_1_0_0_aar.xml
new file mode 100644
index 0000000..417350b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_fragment_fragment_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.fragment:fragment:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fa317cd42f05565e2cd8b9540a229f88/fragment-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fa317cd42f05565e2cd8b9540a229f88/fragment-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fa317cd42f05565e2cd8b9540a229f88/fragment-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.fragment/fragment/1.0.0/bcd167792ec03e930d5c8345c99ae07b2627de84/fragment-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_interpolator_interpolator_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_interpolator_interpolator_1_0_0_aar.xml
new file mode 100644
index 0000000..96b8630
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_interpolator_interpolator_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.interpolator:interpolator:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d5c3ac55f54e7be18a5143c57b0a7ada/interpolator-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d5c3ac55f54e7be18a5143c57b0a7ada/interpolator-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.interpolator/interpolator/1.0.0/fefd5e3cbc479b6b4a9532d05688a1e659e8d3d2/interpolator-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_core_ui_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_core_ui_1_0_0_aar.xml
new file mode 100644
index 0000000..aa1a179
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_core_ui_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.legacy:legacy-support-core-ui:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/506ff032f2e3a2422899c5a2a3d9de51/legacy-support-core-ui-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/506ff032f2e3a2422899c5a2a3d9de51/legacy-support-core-ui-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.legacy/legacy-support-core-ui/1.0.0/f6044eaebe354c778f1f147ddb9e92a3f1e22fc7/legacy-support-core-ui-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_core_utils_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_core_utils_1_0_0_aar.xml
new file mode 100644
index 0000000..53ad603
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_core_utils_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.legacy:legacy-support-core-utils:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b71106a2dbab772943f41fdb129a6c36/legacy-support-core-utils-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b71106a2dbab772943f41fdb129a6c36/legacy-support-core-utils-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.legacy/legacy-support-core-utils/1.0.0/46c37f178088153618cfb0afef08ec96c48f93cb/legacy-support-core-utils-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_v4_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_v4_1_0_0_aar.xml
new file mode 100644
index 0000000..2192a19
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_legacy_legacy_support_v4_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.legacy:legacy-support-v4:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fc8e660555fcd619975fc3f54e7b6732/legacy-support-v4-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fc8e660555fcd619975fc3f54e7b6732/legacy-support-v4-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.legacy/legacy-support-v4/1.0.0/5b8f86fea035328fc9e8c660773037a3401ce25f/legacy-support-v4-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_common_2_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_common_2_0_0_jar.xml
new file mode 100644
index 0000000..f2e418b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_common_2_0_0_jar.xml
@@ -0,0 +1,11 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-common:2.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-common/2.0.0/e070ffae07452331bc5684734fce6831d531785c/lifecycle-common-2.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-common/2.0.0/cb4562c8927ab69f2a8ef49267b90753207df0c3/lifecycle-common-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_2_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_2_0_0_aar.xml
new file mode 100644
index 0000000..e431a01
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_2_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-livedata:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7eeeb2910d1096ef30c55533f294f81f/lifecycle-livedata-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7eeeb2910d1096ef30c55533f294f81f/lifecycle-livedata-2.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-livedata/2.0.0/740ce61935bd789380c01178bd8ce402402ebd2f/lifecycle-livedata-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_core_2_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_core_2_0_0_aar.xml
new file mode 100644
index 0000000..27a2468
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_livedata_core_2_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-livedata-core:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/8a422b90bfe2308ee62c0eaef9ccdad3/lifecycle-livedata-core-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/8a422b90bfe2308ee62c0eaef9ccdad3/lifecycle-livedata-core-2.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-livedata-core/2.0.0/c158207594782b42f3a2e08a5a029eb3319e4404/lifecycle-livedata-core-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_runtime_2_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_runtime_2_0_0_aar.xml
new file mode 100644
index 0000000..a21b7cd
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_runtime_2_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-runtime:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4fbda138fdd3423bf4534df507b43645/lifecycle-runtime-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4fbda138fdd3423bf4534df507b43645/lifecycle-runtime-2.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-runtime/2.0.0/94562933879240f04fc2dea3f1841171b164c748/lifecycle-runtime-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_viewmodel_2_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_viewmodel_2_0_0_aar.xml
new file mode 100644
index 0000000..ac4a73a
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_lifecycle_lifecycle_viewmodel_2_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.lifecycle:lifecycle-viewmodel:2.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/18062901e4234380f6ee3e49763ba4fd/lifecycle-viewmodel-2.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/18062901e4234380f6ee3e49763ba4fd/lifecycle-viewmodel-2.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.lifecycle/lifecycle-viewmodel/2.0.0/41b56105d14b1151a963444875cab191271f43db/lifecycle-viewmodel-2.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_loader_loader_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_loader_loader_1_0_0_aar.xml
new file mode 100644
index 0000000..ee031f1
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_loader_loader_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.loader:loader:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a8c2bb309b0f0e205d5df49a5c8f0224/loader-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a8c2bb309b0f0e205d5df49a5c8f0224/loader-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.loader/loader/1.0.0/b9ef587f3e46c7fe5b00264989764e43ff45cada/loader-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_localbroadcastmanager_localbroadcastmanager_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_localbroadcastmanager_localbroadcastmanager_1_0_0_aar.xml
new file mode 100644
index 0000000..4c56a10
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_localbroadcastmanager_localbroadcastmanager_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.localbroadcastmanager:localbroadcastmanager:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b0258761e09ba69bc3c7bc9f6c71d3b2/localbroadcastmanager-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b0258761e09ba69bc3c7bc9f6c71d3b2/localbroadcastmanager-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.localbroadcastmanager/localbroadcastmanager/1.0.0/3930e99159fd6b7f1d2e7d5fe9af0924ca1faf9/localbroadcastmanager-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_media_media_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_media_media_1_0_0_aar.xml
new file mode 100644
index 0000000..8c61206
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_media_media_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.media:media:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fc89f4a1c9db1f9f645452bfbb4cd681/media-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fc89f4a1c9db1f9f645452bfbb4cd681/media-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fc89f4a1c9db1f9f645452bfbb4cd681/media-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.media/media/1.0.0/5faf25be15e16e27275f5c7e04e15e944ebccea0/media-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_print_print_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_print_print_1_0_0_aar.xml
new file mode 100644
index 0000000..572cf0c
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_print_print_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.print:print:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/ff12cc281f87118c6dbeead31942afb5/print-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/ff12cc281f87118c6dbeead31942afb5/print-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/ff12cc281f87118c6dbeead31942afb5/print-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.print/print/1.0.0/71fc2d9acf7cce6b96230c5af263268b1664914a/print-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_recyclerview_recyclerview_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_recyclerview_recyclerview_1_0_0_aar.xml
new file mode 100644
index 0000000..e255e08
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_recyclerview_recyclerview_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.recyclerview:recyclerview:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/903628750a551479d07974af9ddb1514/recyclerview-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/903628750a551479d07974af9ddb1514/recyclerview-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/903628750a551479d07974af9ddb1514/recyclerview-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.recyclerview/recyclerview/1.0.0/2151d26c3b241f0a887f2dadb9ab091649fcf020/recyclerview-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_slidingpanelayout_slidingpanelayout_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_slidingpanelayout_slidingpanelayout_1_0_0_aar.xml
new file mode 100644
index 0000000..e897ca3
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_slidingpanelayout_slidingpanelayout_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.slidingpanelayout:slidingpanelayout:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0916f73c87a1ba2271fe392cf50cdbd5/slidingpanelayout-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0916f73c87a1ba2271fe392cf50cdbd5/slidingpanelayout-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.slidingpanelayout/slidingpanelayout/1.0.0/f3f2e4fded24d5969a86e1974ad7e96975d970a0/slidingpanelayout-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_swiperefreshlayout_swiperefreshlayout_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_swiperefreshlayout_swiperefreshlayout_1_0_0_aar.xml
new file mode 100644
index 0000000..4e3eb79
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_swiperefreshlayout_swiperefreshlayout_1_0_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.swiperefreshlayout:swiperefreshlayout:1.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/f4af7f1a3c26c4b61981ff2f9af835ae/swiperefreshlayout-1.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/f4af7f1a3c26c4b61981ff2f9af835ae/swiperefreshlayout-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/f4af7f1a3c26c4b61981ff2f9af835ae/swiperefreshlayout-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.swiperefreshlayout/swiperefreshlayout/1.0.0/ab92d86c004eb1d48e45f311b02ca53d6c86b607/swiperefreshlayout-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_vectordrawable_vectordrawable_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_vectordrawable_vectordrawable_1_0_0_aar.xml
new file mode 100644
index 0000000..7213d72
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_vectordrawable_vectordrawable_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.vectordrawable:vectordrawable:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/918b28c8d39dba6a5cbb7085b87a036a/vectordrawable-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/918b28c8d39dba6a5cbb7085b87a036a/vectordrawable-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.vectordrawable/vectordrawable/1.0.0/1b3ff11a55b868339d29101827afc5a3f4608bec/vectordrawable-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_vectordrawable_vectordrawable_animated_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_vectordrawable_vectordrawable_animated_1_0_0_aar.xml
new file mode 100644
index 0000000..3330dca
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_vectordrawable_vectordrawable_animated_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.vectordrawable:vectordrawable-animated:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6467353bf216e46aa5202c7ac80d84af/vectordrawable-animated-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6467353bf216e46aa5202c7ac80d84af/vectordrawable-animated-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.vectordrawable/vectordrawable-animated/1.0.0/24f92bcc89d979cd8b99ae40def4e395850a6466/vectordrawable-animated-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_versionedparcelable_versionedparcelable_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_versionedparcelable_versionedparcelable_1_0_0_aar.xml
new file mode 100644
index 0000000..4177216
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_versionedparcelable_versionedparcelable_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.versionedparcelable:versionedparcelable:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b9383ab9d388ccbdaa651139d89e17c5/versionedparcelable-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b9383ab9d388ccbdaa651139d89e17c5/versionedparcelable-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.versionedparcelable/versionedparcelable/1.0.0/df4c3c5d517f6a49017612e6b4dfdd007e7cc9b8/versionedparcelable-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_viewpager_viewpager_1_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_viewpager_viewpager_1_0_0_aar.xml
new file mode 100644
index 0000000..167001b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__androidx_viewpager_viewpager_1_0_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: androidx.viewpager:viewpager:1.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1428b5f834224b054b3655b7bb9f4141/viewpager-1.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/1428b5f834224b054b3655b7bb9f4141/viewpager-1.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/androidx.viewpager/viewpager/1.0.0/db045f92188b9d247d5f556866f8861ab68528f0/viewpager-1.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_animated_vector_drawable_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_animated_vector_drawable_28_0_0_aar.xml
new file mode 100644
index 0000000..926e5e0
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_animated_vector_drawable_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:animated-vector-drawable:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0360385b7e7798d2ac042478e41bb777/animated-vector-drawable-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/0360385b7e7798d2ac042478e41bb777/animated-vector-drawable-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_appcompat_v7_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_appcompat_v7_28_0_0_aar.xml
new file mode 100644
index 0000000..8e5a861
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_appcompat_v7_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:appcompat-v7:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/493c8b7b6a061f3067c78d2ff6f2a33a/appcompat-v7-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/493c8b7b6a061f3067c78d2ff6f2a33a/appcompat-v7-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/493c8b7b6a061f3067c78d2ff6f2a33a/appcompat-v7-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_asynclayoutinflater_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_asynclayoutinflater_28_0_0_aar.xml
new file mode 100644
index 0000000..d2971d6
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_asynclayoutinflater_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:asynclayoutinflater:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/37a57b5d07cb7283b181ab59781d6626/asynclayoutinflater-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/37a57b5d07cb7283b181ab59781d6626/asynclayoutinflater-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_collections_28_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_collections_28_0_0_jar.xml
new file mode 100644
index 0000000..80e4d73
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_collections_28_0_0_jar.xml
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:collections:28.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/collections/28.0.0/c1bcdade4d3cc2836130424a3f3e4182c666a745/collections-28.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_coordinatorlayout_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_coordinatorlayout_28_0_0_aar.xml
new file mode 100644
index 0000000..810dba0
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_coordinatorlayout_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:coordinatorlayout:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d1d720b84b508eb7120be8de15364994/coordinatorlayout-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d1d720b84b508eb7120be8de15364994/coordinatorlayout-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/d1d720b84b508eb7120be8de15364994/coordinatorlayout-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_cursoradapter_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_cursoradapter_28_0_0_aar.xml
new file mode 100644
index 0000000..acb0eca
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_cursoradapter_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:cursoradapter:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/737b9cf53840d5bb56e79b1fb87414cf/cursoradapter-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/737b9cf53840d5bb56e79b1fb87414cf/cursoradapter-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_customview_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_customview_28_0_0_aar.xml
new file mode 100644
index 0000000..9f3fd68
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_customview_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:customview:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e0bdcb5da39ed592204840c0276a14e3/customview-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/e0bdcb5da39ed592204840c0276a14e3/customview-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_documentfile_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_documentfile_28_0_0_aar.xml
new file mode 100644
index 0000000..eb703fe
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_documentfile_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:documentfile:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cded4a4c2357dd284248eee7a959fabf/documentfile-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/cded4a4c2357dd284248eee7a959fabf/documentfile-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_drawerlayout_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_drawerlayout_28_0_0_aar.xml
new file mode 100644
index 0000000..68b50e3
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_drawerlayout_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:drawerlayout:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fd9b335f9bffa4da28ac733da3b22bc2/drawerlayout-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fd9b335f9bffa4da28ac733da3b22bc2/drawerlayout-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/fd9b335f9bffa4da28ac733da3b22bc2/drawerlayout-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_interpolator_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_interpolator_28_0_0_aar.xml
new file mode 100644
index 0000000..c376876
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_interpolator_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:interpolator:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/52ab0a35671857fd0b0a87879410761b/interpolator-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/52ab0a35671857fd0b0a87879410761b/interpolator-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_loader_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_loader_28_0_0_aar.xml
new file mode 100644
index 0000000..1cf0759
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_loader_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:loader:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7568c9acd27be072424e030d0b2211d9/loader-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7568c9acd27be072424e030d0b2211d9/loader-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_localbroadcastmanager_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_localbroadcastmanager_28_0_0_aar.xml
new file mode 100644
index 0000000..ff24bb6
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_localbroadcastmanager_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:localbroadcastmanager:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/24998885e9a3c0890d1bd69bbd0e1c4d/localbroadcastmanager-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/24998885e9a3c0890d1bd69bbd0e1c4d/localbroadcastmanager-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_print_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_print_28_0_0_aar.xml
new file mode 100644
index 0000000..c05b4b0
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_print_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:print:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/96e2ef3882cc1f29bef93f1bc9fe6260/print-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/96e2ef3882cc1f29bef93f1bc9fe6260/print-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/96e2ef3882cc1f29bef93f1bc9fe6260/print-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_recyclerview_v7_23_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_recyclerview_v7_23_0_1_aar.xml
new file mode 100644
index 0000000..7beb746
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_recyclerview_v7_23_0_1_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:recyclerview-v7:23.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6859b90db05c5c165230854c6d15eebb/recyclerview-v7-23.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6859b90db05c5c165230854c6d15eebb/recyclerview-v7-23.0.1/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/recyclerview-v7/23.0.1/825d1509599a525ea46a7fa26debc00425c36a71/recyclerview-v7-23.0.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/recyclerview-v7/23.0.1/266b4883a1ee9001baa81f40dd4f98f8f4be9430/recyclerview-v7-23.0.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_slidingpanelayout_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_slidingpanelayout_28_0_0_aar.xml
new file mode 100644
index 0000000..05a6343
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_slidingpanelayout_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:slidingpanelayout:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/83b7412fed9823280ffc6e17a8c8d6f6/slidingpanelayout-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/83b7412fed9823280ffc6e17a8c8d6f6/slidingpanelayout-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_annotations_27_0_2_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_annotations_27_0_2_jar.xml
new file mode 100644
index 0000000..616ab07
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_annotations_27_0_2_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-annotations:27.0.2@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-annotations/27.0.2/b9ef4342c934a1a8b107506273dc8061662a322/support-annotations-27.0.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-annotations/27.0.2/f43ae952cf11ec4054a1c70c9c292fa4b37a4422/support-annotations-27.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-annotations/27.0.2/d66efa1539831c039007b871b00cea0dd4101f2b/support-annotations-27.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_annotations_28_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_annotations_28_0_0_jar.xml
new file mode 100644
index 0000000..0fdecce
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_annotations_28_0_0_jar.xml
@@ -0,0 +1,9 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-annotations:28.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-annotations/28.0.0/ed73f5337a002d1fd24339d5fb08c2c9d9ca60d8/support-annotations-28.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_compat_26_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_compat_26_1_0_aar.xml
new file mode 100644
index 0000000..a2e2ca6
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_compat_26_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-compat:26.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/8da7dfc460971bf933b5f33e7fcfc649/support-compat-26.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/8da7dfc460971bf933b5f33e7fcfc649/support-compat-26.1.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-compat/26.1.0/73bfdb5cca1949a51219d3676700996990ea3b52/support-compat-26.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_compat_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_compat_28_0_0_aar.xml
new file mode 100644
index 0000000..4cb3660
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_compat_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-compat:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/04b7991bd863379b8d98e91bbafdb10f/support-compat-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/04b7991bd863379b8d98e91bbafdb10f/support-compat-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/04b7991bd863379b8d98e91bbafdb10f/support-compat-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_ui_26_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_ui_26_1_0_aar.xml
new file mode 100644
index 0000000..8054fc3
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_ui_26_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-core-ui:26.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2c056b6c9151e69801b9e482695f4274/support-core-ui-26.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2c056b6c9151e69801b9e482695f4274/support-core-ui-26.1.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-core-ui/26.1.0/4d52cef4a24bf9939de1d256ca9f0974c6e636a4/support-core-ui-26.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_ui_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_ui_28_0_0_aar.xml
new file mode 100644
index 0000000..7364c75
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_ui_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-core-ui:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/df86cd538a5528caf849ad6db53d465b/support-core-ui-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/df86cd538a5528caf849ad6db53d465b/support-core-ui-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_utils_26_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_utils_26_1_0_aar.xml
new file mode 100644
index 0000000..f4ee64f
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_utils_26_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-core-utils:26.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/18e8cf1f0645e95dbf108663b9d76ab8/support-core-utils-26.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/18e8cf1f0645e95dbf108663b9d76ab8/support-core-utils-26.1.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-core-utils/26.1.0/2b0c3da7f80880bbf365452b354490a77f085c96/support-core-utils-26.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_utils_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_utils_28_0_0_aar.xml
new file mode 100644
index 0000000..ebf86d7
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_core_utils_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-core-utils:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/41cdd5efd525271fc26c2a61353d3419/support-core-utils-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/41cdd5efd525271fc26c2a61353d3419/support-core-utils-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_fragment_26_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_fragment_26_1_0_aar.xml
new file mode 100644
index 0000000..42a5d0c
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_fragment_26_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-fragment:26.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/93f00dd794c223053c15ee052939fb14/support-fragment-26.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/93f00dd794c223053c15ee052939fb14/support-fragment-26.1.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-fragment/26.1.0/8279b00f5194701ff18363fa2958c5a26670b0ef/support-fragment-26.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_fragment_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_fragment_28_0_0_aar.xml
new file mode 100644
index 0000000..24d7953
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_fragment_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-fragment:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c75fdc959f2e74187556b4dc07596739/support-fragment-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c75fdc959f2e74187556b4dc07596739/support-fragment-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/c75fdc959f2e74187556b4dc07596739/support-fragment-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_media_compat_26_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_media_compat_26_1_0_aar.xml
new file mode 100644
index 0000000..2f8395e
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_media_compat_26_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-media-compat:26.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/94ef32ccd0752fb059f482a5d858282b/support-media-compat-26.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/94ef32ccd0752fb059f482a5d858282b/support-media-compat-26.1.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-media-compat/26.1.0/774fd1164ec32514eec562953f723a1920a7fef7/support-media-compat-26.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_v4_26_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_v4_26_1_0_aar.xml
new file mode 100644
index 0000000..9e04269
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_v4_26_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-v4:26.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/80f99b26638901d755ab5bc5004967a7/support-v4-26.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/80f99b26638901d755ab5bc5004967a7/support-v4-26.1.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.android.support/support-v4/26.1.0/9c53eab3272b3b26583b17facac2e90d264b2788/support-v4-26.1.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_vector_drawable_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_vector_drawable_28_0_0_aar.xml
new file mode 100644
index 0000000..657ac2c
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_support_vector_drawable_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:support-vector-drawable:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/71bf3688eef7e74127a145ae87a6ce0b/support-vector-drawable-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/71bf3688eef7e74127a145ae87a6ce0b/support-vector-drawable-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_swiperefreshlayout_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_swiperefreshlayout_28_0_0_aar.xml
new file mode 100644
index 0000000..88329f6
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_swiperefreshlayout_28_0_0_aar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:swiperefreshlayout:28.0.0@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6156cc219d649bfb7e43af1b7e0b3a16/swiperefreshlayout-28.0.0/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6156cc219d649bfb7e43af1b7e0b3a16/swiperefreshlayout-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/6156cc219d649bfb7e43af1b7e0b3a16/swiperefreshlayout-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_versionedparcelable_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_versionedparcelable_28_0_0_aar.xml
new file mode 100644
index 0000000..7c66da2
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_versionedparcelable_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:versionedparcelable:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5a72d05bea2398e27b8fc057bf1d2ffc/versionedparcelable-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5a72d05bea2398e27b8fc057bf1d2ffc/versionedparcelable-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_viewpager_28_0_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_viewpager_28_0_0_aar.xml
new file mode 100644
index 0000000..ed472bc
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_android_support_viewpager_28_0_0_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.android.support:viewpager:28.0.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4f6567ee0cec068adee2f3bab6adce68/viewpager-28.0.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4f6567ee0cec068adee2f3bab6adce68/viewpager-28.0.0/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_drawee_0_8_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_drawee_0_8_1_aar.xml
new file mode 100644
index 0000000..a6f33f0
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_drawee_0_8_1_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.fresco:drawee:0.8.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/71cd06d6f16b52d660157533eab0c8d2/drawee-0.8.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/71cd06d6f16b52d660157533eab0c8d2/drawee-0.8.1/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/drawee/0.8.1/fb90599e19161af64060402e06e06d82552b80d1/drawee-0.8.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/drawee/0.8.1/52ad2393e92426a182609ccf741b266b654a5edf/drawee-0.8.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_fbcore_0_8_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_fbcore_0_8_1_aar.xml
new file mode 100644
index 0000000..eafccb3
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_fbcore_0_8_1_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.fresco:fbcore:0.8.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/84af1c48c8b86964c6ba8203191df728/fbcore-0.8.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/84af1c48c8b86964c6ba8203191df728/fbcore-0.8.1/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/fbcore/0.8.1/e9b3fd6679038042864b415bc441aea059531386/fbcore-0.8.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/fbcore/0.8.1/c177b792eb9b4e333b32a23d909ad1249cb9bc30/fbcore-0.8.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_fresco_0_8_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_fresco_0_8_1_aar.xml
new file mode 100644
index 0000000..b248c38
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_fresco_0_8_1_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.fresco:fresco:0.8.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3a2308d3cb4db750cab21c0f664b6cdc/fresco-0.8.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/3a2308d3cb4db750cab21c0f664b6cdc/fresco-0.8.1/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/fresco/0.8.1/a5f763fabb39d3fbb23dc19371085963af027110/fresco-0.8.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/fresco/0.8.1/8a7967e8ee4adfa7b0d549bfcd6d0fea06517576/fresco-0.8.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_0_8_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_0_8_1_aar.xml
new file mode 100644
index 0000000..a0b165a
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_0_8_1_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.fresco:imagepipeline:0.8.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/9522893c27d863fb98efd606917a80d8/jetified-imagepipeline-0.8.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/9522893c27d863fb98efd606917a80d8/jetified-imagepipeline-0.8.1/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/imagepipeline/0.8.1/2b65495cea536f85d2827aabcb880a1d4df71a60/imagepipeline-0.8.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/imagepipeline/0.8.1/e2da70443d289100ae6490fbddf0ff6bfbc2c5da/imagepipeline-0.8.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_okhttp_0_8_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_okhttp_0_8_1_aar.xml
new file mode 100644
index 0000000..8c2b332
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_fresco_imagepipeline_okhttp_0_8_1_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.fresco:imagepipeline-okhttp:0.8.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7c9a60bb92f72ac85f30726780909a1b/imagepipeline-okhttp-0.8.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7c9a60bb92f72ac85f30726780909a1b/imagepipeline-okhttp-0.8.1/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/imagepipeline-okhttp/0.8.1/cb5bd74a697000b2072dfa3726bae266597cb26e/imagepipeline-okhttp-0.8.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.fresco/imagepipeline-okhttp/0.8.1/3728771840c2e71c5c598432fe1c0a617df81bb7/imagepipeline-okhttp-0.8.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_react_react_native_0_20_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_react_react_native_0_20_1_aar.xml
new file mode 100644
index 0000000..a8a380c
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_react_react_native_0_20_1_aar.xml
@@ -0,0 +1,18 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.react:react-native:0.20.1@aar">
+    <ANNOTATIONS>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/20419f9fe849c5921cdef7ff37cbad2c/jetified-react-native-0.20.1/annotations.zip!/" />
+    </ANNOTATIONS>
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/20419f9fe849c5921cdef7ff37cbad2c/jetified-react-native-0.20.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/20419f9fe849c5921cdef7ff37cbad2c/jetified-react-native-0.20.1/res" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/20419f9fe849c5921cdef7ff37cbad2c/jetified-react-native-0.20.1/jars/libs/infer-annotations-1.5.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.react/react-native/0.20.1/4ba10a8394c63d1d886cbb79c73e2745472d976b/react-native-0.20.1-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.react/react-native/0.20.1/aca865df36322fa13483c10dd4898f320b225ec0/react-native-0.20.1-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_stetho_stetho_1_2_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_stetho_stetho_1_2_0_jar.xml
new file mode 100644
index 0000000..f727979
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_stetho_stetho_1_2_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.stetho:stetho:1.2.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.stetho/stetho/1.2.0/1d6cdb8ce8185b8b23213fad48a83987fb6d2d67/stetho-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.stetho/stetho/1.2.0/319afd3f6db9c107e1caae7167aec7345e464c02/stetho-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.stetho/stetho/1.2.0/21a9c64d90f22bcf39433aa39c2c0aa3ab2b6370/stetho-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_stetho_stetho_okhttp_1_2_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_stetho_stetho_okhttp_1_2_0_jar.xml
new file mode 100644
index 0000000..db271e8
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_facebook_stetho_stetho_okhttp_1_2_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.facebook.stetho:stetho-okhttp:1.2.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.stetho/stetho-okhttp/1.2.0/6c5c9380e245c4ff5be2b2a49dcbb0200c39798e/stetho-okhttp-1.2.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.stetho/stetho-okhttp/1.2.0/e809a358470b676d3e3169eb518510c74a464c14/stetho-okhttp-1.2.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.facebook.stetho/stetho-okhttp/1.2.0/a82478de4c006934b92c7481da0df84a78432e4f/stetho-okhttp-1.2.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_2_3_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_2_3_jar.xml
new file mode 100644
index 0000000..8154525
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_fasterxml_jackson_core_jackson_core_2_2_3_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.fasterxml.jackson.core:jackson-core:2.2.3@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.2.3/1a0113da2cab5f4c216b4e5e7c1dbfaa67087e14/jackson-core-2.2.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.2.3/6021971970a43ae0c22f378cfb5813af869caab/jackson-core-2.2.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.fasterxml.jackson.core/jackson-core/2.2.3/b1c4a6c3c26dfc425efd53c00217868b60d07de9/jackson-core-2.2.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_getkeepsafe_relinker_relinker_1_2_2_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_getkeepsafe_relinker_relinker_1_2_2_aar.xml
new file mode 100644
index 0000000..4a7f49f
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_getkeepsafe_relinker_relinker_1_2_2_aar.xml
@@ -0,0 +1,14 @@
+<component name="libraryTable">
+  <library name="Gradle: com.getkeepsafe.relinker:relinker:1.2.2@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/9cba2ad3dbd0b1dc1491c019f67621e9/relinker-1.2.2/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/9cba2ad3dbd0b1dc1491c019f67621e9/relinker-1.2.2/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.getkeepsafe.relinker/relinker/1.2.2/84113a661b01a453bad17a5a4cf4fd27405967cd/relinker-1.2.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.getkeepsafe.relinker/relinker/1.2.2/783c6bdebdf19671c4bad8a3526c70cd0aceeb9f/relinker-1.2.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_base_16_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_base_16_0_1_aar.xml
new file mode 100644
index 0000000..d2f82ef
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_base_16_0_1_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-base:16.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/03b0060b6b3cf6893f3763a2a15b225a/jetified-play-services-base-16.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/03b0060b6b3cf6893f3763a2a15b225a/jetified-play-services-base-16.0.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_basement_16_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_basement_16_0_1_aar.xml
new file mode 100644
index 0000000..0ab04eb
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_basement_16_0_1_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-basement:16.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7b4c6920008fd7d03bc8134d1b5f3a30/jetified-play-services-basement-16.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/7b4c6920008fd7d03bc8134d1b5f3a30/jetified-play-services-basement-16.0.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_stats_16_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_stats_16_0_1_aar.xml
new file mode 100644
index 0000000..8fc7776
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_stats_16_0_1_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-stats:16.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4e3cfd222aaef6c9c70634803b9c3dfe/jetified-play-services-stats-16.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/4e3cfd222aaef6c9c70634803b9c3dfe/jetified-play-services-stats-16.0.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_tasks_16_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_tasks_16_0_1_aar.xml
new file mode 100644
index 0000000..cf9d1cc
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_android_gms_play_services_tasks_16_0_1_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.android.gms:play-services-tasks:16.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/ab8249643d98f4dd496f23f8ab38ca3a/jetified-play-services-tasks-16.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/ab8249643d98f4dd496f23f8ab38ca3a/jetified-play-services-tasks-16.0.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_auto_value_auto_value_annotations_1_6_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_auto_value_auto_value_annotations_1_6_jar.xml
new file mode 100644
index 0000000..96e18e4
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_auto_value_auto_value_annotations_1_6_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.auto.value:auto-value-annotations:1.6@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.auto.value/auto-value-annotations/1.6/da725083ee79fdcd86d9f3d8a76e38174a01892a/auto-value-annotations-1.6.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.auto.value/auto-value-annotations/1.6/c91dfea7a8f87dabd53cd4537cc3c0401268bc40/auto-value-annotations-1.6-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.auto.value/auto-value-annotations/1.6/5a95aac7aa9d66baa4e5753a9079769ad76944dd/auto-value-annotations-1.6-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_code_findbugs_jsr305_3_0_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_code_findbugs_jsr305_3_0_0_jar.xml
new file mode 100644
index 0000000..d9b6662
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_code_findbugs_jsr305_3_0_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.code.findbugs:jsr305:3.0.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/5871fb60dc68d67da54a663c3fd636a10a532948/jsr305-3.0.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/936f4430478909ed7b138d42f9ad73c919a87b26/jsr305-3.0.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.code.findbugs/jsr305/3.0.0/936f4430478909ed7b138d42f9ad73c919a87b26/jsr305-3.0.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_common_16_1_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_common_16_1_0_aar.xml
new file mode 100644
index 0000000..da852c5
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_common_16_1_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.firebase:firebase-common:16.1.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/87e3839fe09b3173aa188ebdaf05daf2/jetified-firebase-common-16.1.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/87e3839fe09b3173aa188ebdaf05daf2/jetified-firebase-common-16.1.0/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.firebase/firebase-common/16.1.0/e6e3a5d7f4d0cf5797dadd5443a6978dc58ae4e5/firebase-common-16.1.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_iid_17_1_2_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_iid_17_1_2_aar.xml
new file mode 100644
index 0000000..406acff
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_iid_17_1_2_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.firebase:firebase-iid:17.1.2@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5adcba6a211a6116a867dd2ea3abf552/jetified-firebase-iid-17.1.2/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/5adcba6a211a6116a867dd2ea3abf552/jetified-firebase-iid-17.1.2/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.firebase/firebase-iid/17.1.2/b4483bf40ddc0fcac6fcd0d9b57bfb9692a93bac/firebase-iid-17.1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_iid_interop_16_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_iid_interop_16_0_1_aar.xml
new file mode 100644
index 0000000..a845eed
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_iid_interop_16_0_1_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.firebase:firebase-iid-interop:16.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2b418efc5b0015158ab6ca6c405a97f2/jetified-firebase-iid-interop-16.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2b418efc5b0015158ab6ca6c405a97f2/jetified-firebase-iid-interop-16.0.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_measurement_connector_17_0_1_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_measurement_connector_17_0_1_aar.xml
new file mode 100644
index 0000000..89301a3
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_measurement_connector_17_0_1_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.firebase:firebase-measurement-connector:17.0.1@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a2b12453d36308ff20f15eed9997ce04/jetified-firebase-measurement-connector-17.0.1/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/a2b12453d36308ff20f15eed9997ce04/jetified-firebase-measurement-connector-17.0.1/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_messaging_17_6_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_messaging_17_6_0_aar.xml
new file mode 100644
index 0000000..22df788
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_google_firebase_firebase_messaging_17_6_0_aar.xml
@@ -0,0 +1,12 @@
+<component name="libraryTable">
+  <library name="Gradle: com.google.firebase:firebase-messaging:17.6.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2bbd496c76937d2209eec4529beddc2c/jetified-firebase-messaging-17.6.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/2bbd496c76937d2209eec4529beddc2c/jetified-firebase-messaging-17.6.0/res" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.google.firebase/firebase-messaging/17.6.0/e82c07ee73698c3f15b4e8bc3ae3d0149d330e29/firebase-messaging-17.6.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_nineoldandroids_library_2_4_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_nineoldandroids_library_2_4_0_jar.xml
new file mode 100644
index 0000000..e60968f
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_nineoldandroids_library_2_4_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.nineoldandroids:library:2.4.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nineoldandroids/library/2.4.0/e9b63380f3a242dbdbf103a2355ad7e43bad17cb/library-2.4.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nineoldandroids/library/2.4.0/b6ed12a19045f2da5c21de5040a7c509bc14eb5/library-2.4.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.nineoldandroids/library/2.4.0/83d41901478fa8795254244acbafd03f14224dab/library-2.4.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_parse_bolts_bolts_android_1_1_4_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_parse_bolts_bolts_android_1_1_4_jar.xml
new file mode 100644
index 0000000..b1e4a18
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_parse_bolts_bolts_android_1_1_4_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.parse.bolts:bolts-android:1.1.4@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-android/1.1.4/129874135e6081269ace2312092031558865de12/bolts-android-1.1.4.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-android/1.1.4/f5dd6492c539679411fa30818320b737c410158f/bolts-android-1.1.4-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.parse.bolts/bolts-android/1.1.4/8bcc005d44a1cbc01c8458dbe125617a387036c0/bolts-android-1.1.4-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okhttp_okhttp_2_5_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okhttp_okhttp_2_5_0_jar.xml
new file mode 100644
index 0000000..d5f161e
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okhttp_okhttp_2_5_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.squareup.okhttp:okhttp:2.5.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp/okhttp/2.5.0/4de2b4ed3445c37ec1720a7d214712e845a24636/okhttp-2.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp/okhttp/2.5.0/ccfa98043107579862d46bdc26db2f6b308239b2/okhttp-2.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp/okhttp/2.5.0/cd4ddf1fb4ad84ea5d67ee3b386aea25f02ea096/okhttp-2.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okhttp_okhttp_ws_2_5_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okhttp_okhttp_ws_2_5_0_jar.xml
new file mode 100644
index 0000000..0dcec07
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okhttp_okhttp_ws_2_5_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.squareup.okhttp:okhttp-ws:2.5.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp/okhttp-ws/2.5.0/e9753b7dcae5deca92e871c5c759067070b07bc/okhttp-ws-2.5.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp/okhttp-ws/2.5.0/50c4fc8444f620dd7f721a21e6b1478e2643687e/okhttp-ws-2.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okhttp/okhttp-ws/2.5.0/11ea3308217730b76179c72dad396736ca151ab6/okhttp-ws-2.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okio_okio_1_6_0_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okio_okio_1_6_0_jar.xml
new file mode 100644
index 0000000..c1bd464
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_squareup_okio_okio_1_6_0_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: com.squareup.okio:okio:1.6.0@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.6.0/98476622f10715998eacf9240d6b479f12c66143/okio-1.6.0.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.6.0/d25d744996b028d3e244849a4a773e0bdebe4e79/okio-1.6.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.squareup.okio/okio/1.6.0/fb6ec0fbaa0229088b0d3dfe3b1f9d24add3e775/okio-1.6.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_twilio_voice_android_4_5_0_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_twilio_voice_android_4_5_0_aar.xml
new file mode 100644
index 0000000..27ba36d
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_twilio_voice_android_4_5_0_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: com.twilio:voice-android:4.5.0@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/daeccd1e94fc0ecd3bb2ba9c2a871ec4/jetified-voice-android-4.5.0/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/daeccd1e94fc0ecd3bb2ba9c2a871ec4/jetified-voice-android-4.5.0/res" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/daeccd1e94fc0ecd3bb2ba9c2a871ec4/jetified-voice-android-4.5.0/jars/libs/libwebrtc.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.twilio/voice-android/4.5.0/877abd9bfb4ae200f7066ed5d11c21fd3b52f698/voice-android-4.5.0-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.twilio/voice-android/4.5.0/f322192a294016a496885203b01bee709cb563fe/voice-android-4.5.0-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_twilio_voice_android_5_0_2_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_twilio_voice_android_5_0_2_aar.xml
new file mode 100644
index 0000000..d70ea56
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__com_twilio_voice_android_5_0_2_aar.xml
@@ -0,0 +1,15 @@
+<component name="libraryTable">
+  <library name="Gradle: com.twilio:voice-android:5.0.2@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b67b12ef233591e33e2b8f40bf6764a7/jetified-voice-android-5.0.2/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b67b12ef233591e33e2b8f40bf6764a7/jetified-voice-android-5.0.2/res" />
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b67b12ef233591e33e2b8f40bf6764a7/jetified-voice-android-5.0.2/jars/libs/libwebrtc.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.twilio/voice-android/5.0.2/99f99d697afefc5bc9177aee9f8227c56558b8b4/voice-android-5.0.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.twilio/voice-android/5.0.2/e47e55b304d675bd874bac3519f0ba702dca3b25/voice-android-5.0.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__commons_cli_commons_cli_1_2_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__commons_cli_commons_cli_1_2_jar.xml
new file mode 100644
index 0000000..c8c7d9e
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__commons_cli_commons_cli_1_2_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: commons-cli:commons-cli:1.2@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.2/2bf96b7aa8b611c177d329452af1dc933e14501c/commons-cli-1.2.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.2/314265b6bc75d2c6d601d2842af702d211390d13/commons-cli-1.2-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/commons-cli/commons-cli/1.2/6c5459816530a1962ac18cd315cc775b1b384329/commons-cli-1.2-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__junit_junit_4_12_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__junit_junit_4_12_jar.xml
new file mode 100644
index 0000000..24e5b72
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__junit_junit_4_12_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: junit:junit:4.12@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/2973d150c0dc1fefe998f834810d68f278ea58ec/junit-4.12.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/941a8be4506c65f0a9001c08812fb7da1e505e21/junit-4.12-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/junit/junit/4.12/a6c32b40bf3d76eca54e3c601e5d1470c86fcdfa/junit-4.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3_jar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3_jar.xml
new file mode 100644
index 0000000..6b1e2e7
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__org_hamcrest_hamcrest_core_1_3_jar.xml
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Gradle: org.hamcrest:hamcrest-core:1.3@jar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/42a25dc3219429f0e5d060061f71acb49bf010a0/hamcrest-core-1.3.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/ad09811315f1d4f5756986575b0ea16b99cd686f/hamcrest-core-1.3-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/org.hamcrest/hamcrest-core/1.3/1dc37250fbc78e23a65a67fbbaf71d2e9cbc3c0b/hamcrest-core-1.3-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__org_webkit_android_jsc_r174650_aar.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__org_webkit_android_jsc_r174650_aar.xml
new file mode 100644
index 0000000..dff6536
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/libraries/Gradle__org_webkit_android_jsc_r174650_aar.xml
@@ -0,0 +1,10 @@
+<component name="libraryTable">
+  <library name="Gradle: org.webkit:android-jsc:r174650@aar">
+    <CLASSES>
+      <root url="jar://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b639a50aff8ac83159bc2d376a610075/android-jsc-r174650/jars/classes.jar!/" />
+      <root url="file://$USER_HOME$/.gradle/caches/transforms-2/files-2.1/b639a50aff8ac83159bc2d376a610075/android-jsc-r174650/res" />
+    </CLASSES>
+    <JAVADOC />
+    <SOURCES />
+  </library>
+</component>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/misc.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/misc.xml
new file mode 100644
index 0000000..b252502
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/misc.xml
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CMakeSettings">
+    <configurations>
+      <configuration PROFILE_NAME="Debug" CONFIG_NAME="Debug" />
+    </configurations>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" default="true" project-jdk-name="JDK" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/build/classes" />
+  </component>
+  <component name="ProjectType">
+    <option name="id" value="Android" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/modules.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/modules.xml
new file mode 100644
index 0000000..e54e28e
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/modules.xml
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/android.iml" filepath="$PROJECT_DIR$/android.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/runConfigurations.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/runConfigurations.xml
new file mode 100644
index 0000000..7f68460
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/runConfigurations.xml
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RunConfigurationProducerService">
+    <option name="ignoredProducers">
+      <set>
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.AllInPackageGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestClassGradleConfigurationProducer" />
+        <option value="org.jetbrains.plugins.gradle.execution.test.runner.TestMethodGradleConfigurationProducer" />
+      </set>
+    </option>
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/vcs.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/vcs.xml
new file mode 100644
index 0000000..6c0b863
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/vcs.xml
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/.idea/workspace.xml b/node_modules/react-native-twilio-programmable-voice/android/.idea/workspace.xml
new file mode 100644
index 0000000..67dd84b
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/.idea/workspace.xml
@@ -0,0 +1,460 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="AndroidLogFilters">
+    <option name="TOOL_WINDOW_CONFIGURED_FILTER" value="Show only selected application" />
+  </component>
+  <component name="ChangeListManager">
+    <list default="true" id="e93dab9b-31cf-4522-8255-23e18e8e616b" name="Default Changelist" comment="" />
+    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
+    <option name="SHOW_DIALOG" value="false" />
+    <option name="HIGHLIGHT_CONFLICTS" value="true" />
+    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
+    <option name="LAST_RESOLUTION" value="IGNORE" />
+  </component>
+  <component name="DefaultGradleProjectSettings">
+    <option name="isMigrated" value="true" />
+  </component>
+  <component name="ExternalProjectsManager">
+    <system id="GRADLE">
+      <state>
+        <projects_view />
+      </state>
+    </system>
+  </component>
+  <component name="FileEditorManager">
+    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="129">
+              <caret line="244" column="76" selection-start-line="244" selection-start-column="63" selection-end-line="244" selection-end-column="76" />
+              <folding>
+                <element signature="e#7716#7717#0" expanded="true" />
+                <element signature="e#7742#7743#0" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="true">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="129">
+              <caret line="21" column="31" selection-start-line="21" selection-start-column="31" selection-end-line="21" selection-end-column="31" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="129">
+              <caret line="116" column="31" selection-start-line="116" selection-start-column="31" selection-end-line="116" selection-end-column="31" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/build.gradle">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="1160">
+              <caret line="58" selection-start-line="58" selection-end-line="58" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="169">
+              <caret line="37" column="56" selection-start-line="37" selection-start-column="56" selection-end-line="37" selection-end-column="56" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="129">
+              <caret line="28" column="37" selection-start-line="28" selection-start-column="37" selection-end-line="28" selection-end-column="37" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="129">
+              <caret line="45" column="70" selection-start-line="45" selection-start-column="70" selection-end-line="45" selection-end-column="70" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="129">
+              <caret line="18" column="22" selection-start-line="18" selection-start-column="22" selection-end-line="18" selection-end-column="22" />
+            </state>
+          </provider>
+        </entry>
+      </file>
+      <file pinned="false" current-in-tab="false">
+        <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java">
+          <provider selected="true" editor-type-id="text-editor">
+            <state relative-caret-position="189">
+              <caret line="226" column="32" selection-start-line="226" selection-start-column="32" selection-end-line="226" selection-end-column="32" />
+              <folding>
+                <element signature="imports" expanded="true" />
+              </folding>
+            </state>
+          </provider>
+        </entry>
+      </file>
+    </leaf>
+  </component>
+  <component name="FindInProjectRecents">
+    <findStrings>
+      <find>getstate()</find>
+      <find>pending</find>
+      <find>params.put</find>
+      <find>twimlparams</find>
+      <find>handleincomingcallintent</find>
+      <find>unseta</find>
+      <find>disconnect()</find>
+      <find>accept()</find>
+      <find>cancel</find>
+      <find>voice.handle</find>
+      <find>voice.handlemessage</find>
+      <find>accept</find>
+      <find>accept(</find>
+      <find>call_state</find>
+      <find>fcm</find>
+      <find>initwithaccess</find>
+      <find>createhanguplocalnotification</find>
+      <find>IGNORED</find>
+      <find>notification</find>
+      <find>connect(</find>
+      <find>EVENT_CONNECTION_DID_CONNECT</find>
+      <find>audiomanager</find>
+      <find>notification(</find>
+    </findStrings>
+  </component>
+  <component name="Git.Settings">
+    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/../../../.." />
+  </component>
+  <component name="IdeDocumentHistory">
+    <option name="CHANGED_PATHS">
+      <list>
+        <option value="$PROJECT_DIR$/gradle.properties" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/Constants.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseInstanceIDService.java" />
+        <option value="$PROJECT_DIR$/build.gradle" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java" />
+        <option value="$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectFrameBounds" extendedState="6">
+    <option name="x" value="960" />
+    <option name="y" value="1107" />
+    <option name="width" value="960" />
+    <option name="height" value="1053" />
+  </component>
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
+  <component name="ProjectView">
+    <navigator proportions="" version="1">
+      <foldersAlwaysOnTop value="true" />
+    </navigator>
+    <panes>
+      <pane id="PackagesPane" />
+      <pane id="AndroidView">
+        <subPane>
+          <expand>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+              <item name="java" type="edd41e36:AndroidSourceTypeNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+              <item name="java" type="edd41e36:AndroidSourceTypeNode" />
+              <item name="com" type="cbb59c9e:AndroidPsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+              <item name="java" type="edd41e36:AndroidSourceTypeNode" />
+              <item name="com" type="cbb59c9e:AndroidPsiDirectoryNode" />
+              <item name="hoxfon" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+              <item name="java" type="edd41e36:AndroidSourceTypeNode" />
+              <item name="com" type="cbb59c9e:AndroidPsiDirectoryNode" />
+              <item name="hoxfon" type="462c0819:PsiDirectoryNode" />
+              <item name="react" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+              <item name="java" type="edd41e36:AndroidSourceTypeNode" />
+              <item name="com" type="cbb59c9e:AndroidPsiDirectoryNode" />
+              <item name="hoxfon" type="462c0819:PsiDirectoryNode" />
+              <item name="react" type="462c0819:PsiDirectoryNode" />
+              <item name="RNTwilioVoice" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="android" type="feadf853:AndroidModuleNode" />
+              <item name="java" type="edd41e36:AndroidSourceTypeNode" />
+              <item name="com" type="cbb59c9e:AndroidPsiDirectoryNode" />
+              <item name="hoxfon" type="462c0819:PsiDirectoryNode" />
+              <item name="react" type="462c0819:PsiDirectoryNode" />
+              <item name="RNTwilioVoice" type="462c0819:PsiDirectoryNode" />
+              <item name="fcm" type="462c0819:PsiDirectoryNode" />
+            </path>
+            <path>
+              <item name="android" type="1abcf292:AndroidViewProjectNode" />
+              <item name="Gradle Scripts" type="ae0cef3a:AndroidBuildScriptsGroupNode" />
+            </path>
+          </expand>
+          <select />
+        </subPane>
+      </pane>
+      <pane id="ProjectPane" />
+      <pane id="Scope" />
+    </panes>
+  </component>
+  <component name="PropertiesComponent">
+    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
+    <property name="android.sdk.path" value="$USER_HOME$/Android/Sdk" />
+    <property name="project.structure.last.edited" value="Dependencies" />
+    <property name="project.structure.proportion" value="0.17" />
+    <property name="project.structure.side.proportion" value="0.2" />
+    <property name="settings.editor.selected.configurable" value="AndroidSdkUpdater" />
+  </component>
+  <component name="RecentsManager">
+    <key name="CopyClassDialog.RECENTS_KEY">
+      <recent name="com.hoxfon.react.RNTwilioVoice" />
+      <recent name="com.hoxfon.react.RNTwilioVoice.fcm" />
+    </key>
+  </component>
+  <component name="RunDashboard">
+    <option name="ruleStates">
+      <list>
+        <RuleState>
+          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
+        </RuleState>
+        <RuleState>
+          <option name="name" value="StatusDashboardGroupingRule" />
+        </RuleState>
+      </list>
+    </option>
+  </component>
+  <component name="RunManager">
+    <configuration default="true" type="JUnit" factoryName="JUnit">
+      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
+      <module name="" />
+      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
+      <option name="ALTERNATIVE_JRE_PATH" />
+      <option name="PACKAGE_NAME" />
+      <option name="MAIN_CLASS_NAME" />
+      <option name="METHOD_NAME" />
+      <option name="TEST_OBJECT" value="class" />
+      <option name="VM_PARAMETERS" value="-ea" />
+      <option name="PARAMETERS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <option name="ENV_VARIABLES" />
+      <option name="PASS_PARENT_ENVS" value="true" />
+      <option name="TEST_SEARCH_SCOPE">
+        <value defaultName="singleModule" />
+      </option>
+      <envs />
+      <patterns />
+      <method />
+    </configuration>
+    <configuration name="&lt;template&gt;" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" default="true" selected="false">
+      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
+    </configuration>
+    <configuration default="true" type="AndroidJUnit" factoryName="Android JUnit">
+      <option name="TEST_OBJECT" value="class" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <method v="2">
+        <option name="Android.Gradle.BeforeRunTask" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="Applet">
+      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="Application" factoryName="Application">
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration default="true" type="TestNG">
+      <option name="TEST_OBJECT" value="CLASS" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
+      <properties />
+      <listeners />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+  </component>
+  <component name="SvnConfiguration">
+    <configuration />
+  </component>
+  <component name="TaskManager">
+    <task active="true" id="Default" summary="Default task">
+      <changelist id="e93dab9b-31cf-4522-8255-23e18e8e616b" name="Default Changelist" comment="" />
+      <created>1577234385928</created>
+      <option name="number" value="Default" />
+      <option name="presentableId" value="Default" />
+      <updated>1577234385928</updated>
+    </task>
+    <servers />
+  </component>
+  <component name="ToolWindowManager">
+    <frame x="0" y="1107" width="1920" height="1053" extended-state="6" />
+    <layout>
+      <window_info active="true" content_ui="combo" id="Project" order="0" sideWeight="0.49837133" visible="true" weight="0.23372465" />
+      <window_info id="Captures" order="1" sideWeight="0.50162864" side_tool="true" weight="0.15635005" />
+      <window_info id="Structure" order="2" side_tool="true" />
+      <window_info id="Favorites" order="3" side_tool="true" />
+      <window_info id="Build Variants" order="4" side_tool="true" />
+      <window_info id="Image Layers" order="5" />
+      <window_info id="Designer" order="6" />
+      <window_info id="Resources Explorer" order="7" />
+      <window_info id="Capture Tool" order="8" />
+      <window_info anchor="bottom" id="Version Control" order="0" />
+      <window_info anchor="bottom" id="Logcat" order="1" weight="0.7756906" />
+      <window_info anchor="bottom" id="TODO" order="2" />
+      <window_info anchor="bottom" id="Terminal" order="3" />
+      <window_info anchor="bottom" id="Event Log" order="4" side_tool="true" />
+      <window_info anchor="bottom" id="Build" order="5" visible="true" weight="0.46853933" />
+      <window_info anchor="bottom" id="Android Profiler" order="6" show_stripe_button="false" />
+      <window_info anchor="bottom" id="Run" order="7" />
+      <window_info anchor="bottom" id="Debug" order="8" />
+      <window_info anchor="bottom" id="Find" order="9" weight="0.22464558" />
+      <window_info anchor="right" id="Device File Explorer" order="0" side_tool="true" />
+      <window_info anchor="right" id="Capture Analysis" order="1" />
+      <window_info anchor="right" id="Gradle" order="2" />
+      <window_info anchor="right" id="Theme Preview" order="3" />
+      <window_info anchor="right" id="Palette&#9;" order="4" />
+    </layout>
+  </component>
+  <component name="editorHistoryManager">
+    <entry file="jar://$USER_HOME$/.gradle/caches/modules-2/files-2.1/com.twilio/voice-android/4.5.0/f322192a294016a496885203b01bee709cb563fe/voice-android-4.5.0-sources.jar!/com/twilio/voice/CallInvite.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="-171">
+          <caret line="619" column="38" selection-start-line="619" selection-start-column="38" selection-end-line="619" selection-end-column="38" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseInstanceIDService.java" />
+    <entry file="file://$PROJECT_DIR$/gradle/wrapper/gradle-wrapper.properties">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/proguard-rules.pro">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/local.properties">
+      <provider selected="true" editor-type-id="text-editor" />
+    </entry>
+    <entry file="file://$PROJECT_DIR$/gradle.properties">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="360">
+          <caret line="18" column="27" selection-start-line="18" selection-start-column="27" selection-end-line="18" selection-end-column="27" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/Constants.java" />
+    <entry file="file://$PROJECT_DIR$/build.gradle">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="1160">
+          <caret line="58" selection-start-line="58" selection-end-line="58" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="116" column="31" selection-start-line="116" selection-start-column="31" selection-end-line="116" selection-end-column="31" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="189">
+          <caret line="226" column="32" selection-start-line="226" selection-start-column="32" selection-end-line="226" selection-end-column="32" />
+          <folding>
+            <element signature="imports" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="169">
+          <caret line="37" column="56" selection-start-line="37" selection-start-column="56" selection-end-line="37" selection-end-column="56" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="28" column="37" selection-start-line="28" selection-start-column="37" selection-end-line="28" selection-end-column="37" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="45" column="70" selection-start-line="45" selection-start-column="70" selection-end-line="45" selection-end-column="70" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="18" column="22" selection-start-line="18" selection-start-column="22" selection-end-line="18" selection-end-column="22" />
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="244" column="76" selection-start-line="244" selection-start-column="63" selection-end-line="244" selection-end-column="76" />
+          <folding>
+            <element signature="e#7716#7717#0" expanded="true" />
+            <element signature="e#7742#7743#0" expanded="true" />
+          </folding>
+        </state>
+      </provider>
+    </entry>
+    <entry file="file://$PROJECT_DIR$/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java">
+      <provider selected="true" editor-type-id="text-editor">
+        <state relative-caret-position="129">
+          <caret line="21" column="31" selection-start-line="21" selection-start-column="31" selection-end-line="21" selection-end-column="31" />
+        </state>
+      </provider>
+    </entry>
+  </component>
+</project>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/android.iml b/node_modules/react-native-twilio-programmable-voice/android/android.iml
new file mode 100644
index 0000000..37a7862
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/android.iml
@@ -0,0 +1,158 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module external.linked.project.id="android" external.linked.project.path="$MODULE_DIR$" external.root.project.path="$MODULE_DIR$" external.system.id="GRADLE" type="JAVA_MODULE" version="4">
+  <component name="FacetManager">
+    <facet type="android-gradle" name="Android-Gradle">
+      <configuration>
+        <option name="GRADLE_PROJECT_PATH" value=":" />
+        <option name="LAST_SUCCESSFUL_SYNC_AGP_VERSION" value="3.5.2" />
+        <option name="LAST_KNOWN_AGP_VERSION" value="3.5.2" />
+      </configuration>
+    </facet>
+    <facet type="android" name="Android">
+      <configuration>
+        <option name="SELECTED_BUILD_VARIANT" value="debug" />
+        <option name="ASSEMBLE_TASK_NAME" value="assembleDebug" />
+        <option name="COMPILE_JAVA_TASK_NAME" value="compileDebugSources" />
+        <afterSyncTasks>
+          <task>generateDebugSources</task>
+        </afterSyncTasks>
+        <option name="ALLOW_USER_CONFIGURATION" value="false" />
+        <option name="MANIFEST_FILE_RELATIVE_PATH" value="/src/main/AndroidManifest.xml" />
+        <option name="RES_FOLDER_RELATIVE_PATH" value="/src/main/res" />
+        <option name="RES_FOLDERS_RELATIVE_PATH" value="file://$MODULE_DIR$/src/main/res" />
+        <option name="TEST_RES_FOLDERS_RELATIVE_PATH" value="" />
+        <option name="ASSETS_FOLDER_RELATIVE_PATH" value="/src/main/assets" />
+        <option name="PROJECT_TYPE" value="1" />
+      </configuration>
+    </facet>
+  </component>
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_7">
+    <output url="file://$MODULE_DIR$/build/intermediates/javac/debug/classes" />
+    <output-test url="file://$MODULE_DIR$/build/intermediates/javac/debugUnitTest/classes" />
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/ap_generated_sources/debug/out" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/aidl_source_output_dir/debug/compileDebugAidl/out" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/debug" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/renderscript_source_output_dir/debug/compileDebugRenderscript/out" isTestSource="false" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/debug" type="java-resource" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/debug" type="java-resource" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/ap_generated_sources/debugAndroidTest/out" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/aidl_source_output_dir/debugAndroidTest/compileDebugAndroidTestAidl/out" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/source/buildConfig/androidTest/debug" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/renderscript_source_output_dir/debugAndroidTest/compileDebugAndroidTestRenderscript/out" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/rs/androidTest/debug" type="java-test-resource" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/res/resValues/androidTest/debug" type="java-test-resource" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/build/generated/ap_generated_sources/debugUnitTest/out" isTestSource="true" generated="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/debug/shaders" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTestDebug/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/testDebug/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/res" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/assets" type="java-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/aidl" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/rs" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/main/shaders" isTestSource="false" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/androidTest/shaders" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/res" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/resources" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/assets" type="java-test-resource" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/aidl" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/rs" isTestSource="true" />
+      <sourceFolder url="file://$MODULE_DIR$/src/test/shaders" isTestSource="true" />
+      <excludeFolder url="file://$MODULE_DIR$/build" />
+    </content>
+    <orderEntry type="jdk" jdkName="Android API 28 Platform" jdkType="Android SDK" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="library" scope="TEST" name="Gradle: junit:junit:4.12@jar" level="project" />
+    <orderEntry type="library" scope="TEST" name="Gradle: org.hamcrest:hamcrest-core:1.3@jar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.collection:collection:1.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-common:2.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.arch.core:core-common:2.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.annotation:annotation:1.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.stetho:stetho-okhttp:1.2.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.stetho:stetho:1.2.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.code.findbugs:jsr305:3.0.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: commons-cli:commons-cli:1.2@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.squareup.okhttp:okhttp-ws:2.5.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.squareup.okhttp:okhttp:2.5.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.squareup.okio:okio:1.6.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.nineoldandroids:library:2.4.0@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.parse.bolts:bolts-android:1.1.4@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.fasterxml.jackson.core:jackson-core:2.2.3@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.auto.value:auto-value-annotations:1.6@jar" level="project" />
+    <orderEntry type="library" name="Gradle: com.twilio:voice-android:5.0.2@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.getkeepsafe.relinker:relinker:1.2.2@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.react:react-native:0.20.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.appcompat:appcompat:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.firebase:firebase-messaging:17.6.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.firebase:firebase-iid:17.1.2@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.firebase:firebase-common:16.1.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.firebase:firebase-iid-interop:16.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-base:16.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-tasks:16.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.firebase:firebase-measurement-connector:17.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-stats:16.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.google.android.gms:play-services-basement:16.0.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.fresco:fresco:0.8.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.fresco:imagepipeline-okhttp:0.8.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.fresco:imagepipeline:0.8.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.fresco:drawee:0.8.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.legacy:legacy-support-v4:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.fragment:fragment:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.vectordrawable:vectordrawable-animated:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.recyclerview:recyclerview:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.legacy:legacy-support-core-ui:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.legacy:legacy-support-core-utils:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.vectordrawable:vectordrawable:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.loader:loader:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.viewpager:viewpager:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.coordinatorlayout:coordinatorlayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.drawerlayout:drawerlayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.slidingpanelayout:slidingpanelayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.customview:customview:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.swiperefreshlayout:swiperefreshlayout:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.asynclayoutinflater:asynclayoutinflater:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.media:media:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.core:core:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.versionedparcelable:versionedparcelable:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.cursoradapter:cursoradapter:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-runtime:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.documentfile:documentfile:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.localbroadcastmanager:localbroadcastmanager:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.print:print:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-viewmodel:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-livedata:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.lifecycle:lifecycle-livedata-core:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.arch.core:core-runtime:2.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: androidx.interpolator:interpolator:1.0.0@aar" level="project" />
+    <orderEntry type="library" name="Gradle: com.facebook.fresco:fbcore:0.8.1@aar" level="project" />
+    <orderEntry type="library" name="Gradle: org.webkit:android-jsc:r174650@aar" level="project" />
+  </component>
+</module>
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/build.gradle b/node_modules/react-native-twilio-programmable-voice/android/build.gradle
index 878fc17..f0a4533 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/build.gradle
+++ b/node_modules/react-native-twilio-programmable-voice/android/build.gradle
@@ -2,11 +2,12 @@
 
 buildscript {
     repositories {
+        google()
         jcenter()
     }
     dependencies {
-        classpath 'com.android.tools.build:gradle:2.2.1'
-        classpath 'com.google.gms:google-services:3.1.2'
+        classpath 'com.android.tools.build:gradle:3.5.2'
+        classpath 'com.google.gms:google-services:4.2.0'
 
         // NOTE: Do not place your application dependencies here; they belong
         // in the individual module build.gradle files
@@ -15,21 +16,24 @@ buildscript {
 
 allprojects {
     repositories {
+        google()
         jcenter()
-        maven {
-            url "https://maven.google.com"
-        }
     }
 }
 
 apply plugin: 'com.android.library'
 
+def DEFAULT_COMPILE_SDK_VERSION = 28
+def DEFAULT_BUILD_TOOLS_VERSION = "28.0.3"
+def DEFAULT_TARGET_SDK_VERSION = 28
+def DEFAULT_SUPPORT_LIB_VERSION = "28.0.3"
+
 android {
-    compileSdkVersion 27
-    buildToolsVersion "27.0.3"
+    compileSdkVersion rootProject.hasProperty('compileSdkVersion') ? rootProject.compileSdkVersion : DEFAULT_COMPILE_SDK_VERSION
+    buildToolsVersion rootProject.hasProperty('buildToolsVersion') ? rootProject.buildToolsVersion : DEFAULT_BUILD_TOOLS_VERSION
     defaultConfig {
         minSdkVersion 16
-        targetSdkVersion 27
+        targetSdkVersion rootProject.hasProperty('targetSdkVersion') ? rootProject.targetSdkVersion : DEFAULT_TARGET_SDK_VERSION
         versionCode 1
         versionName "1.0"
         vectorDrawables.useSupportLibrary = true
@@ -43,10 +47,12 @@ android {
 }
 
 dependencies {
-    compile fileTree(include: ['*.jar'], dir: 'libs')
-    compile 'com.twilio:voice-android:2.0.7'
-    compile 'com.android.support:appcompat-v7:27.0.2'
-    compile 'com.facebook.react:react-native:+'
-    compile 'com.google.firebase:firebase-messaging:17.+'
-    testCompile 'junit:junit:4.12'
+    def supportLibVersion = rootProject.hasProperty('supportLibVersion') ? rootProject.supportLibVersion : DEFAULT_SUPPORT_LIB_VERSION
+
+    implementation fileTree(include: ['*.jar'], dir: 'libs')
+    implementation 'com.twilio:voice-android:5.0.2'
+    implementation "com.android.support:appcompat-v7:$supportLibVersion"
+    implementation 'com.facebook.react:react-native:+'
+    implementation 'com.google.firebase:firebase-messaging:17.+'
+    testImplementation 'junit:junit:4.12'
 }
diff --git a/node_modules/react-native-twilio-programmable-voice/android/gradle.properties b/node_modules/react-native-twilio-programmable-voice/android/gradle.properties
index aac7c9b..af6dcbe 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/gradle.properties
+++ b/node_modules/react-native-twilio-programmable-voice/android/gradle.properties
@@ -15,3 +15,5 @@ org.gradle.jvmargs=-Xmx1536m
 # This option should only be used with decoupled projects. More details, visit
 # http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects
 # org.gradle.parallel=true
+android.useAndroidX=true
+android.enableJetifier=true
\ No newline at end of file
diff --git a/node_modules/react-native-twilio-programmable-voice/android/gradle/wrapper/gradle-wrapper.properties b/node_modules/react-native-twilio-programmable-voice/android/gradle/wrapper/gradle-wrapper.properties
index 04e285f..f6405f2 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/gradle/wrapper/gradle-wrapper.properties
+++ b/node_modules/react-native-twilio-programmable-voice/android/gradle/wrapper/gradle-wrapper.properties
@@ -3,4 +3,4 @@ distributionBase=GRADLE_USER_HOME
 distributionPath=wrapper/dists
 zipStoreBase=GRADLE_USER_HOME
 zipStorePath=wrapper/dists
-distributionUrl=https\://services.gradle.org/distributions/gradle-2.14.1-all.zip
+distributionUrl=https\://services.gradle.org/distributions/gradle-5.4.1-all.zip
diff --git a/node_modules/react-native-twilio-programmable-voice/android/local.properties b/node_modules/react-native-twilio-programmable-voice/android/local.properties
new file mode 100644
index 0000000..39c1bf5
--- /dev/null
+++ b/node_modules/react-native-twilio-programmable-voice/android/local.properties
@@ -0,0 +1,8 @@
+## This file must *NOT* be checked into Version Control Systems,
+# as it contains information specific to your local configuration.
+#
+# Location of the SDK. This is only used by Gradle.
+# For customization when using a Version Control System, please read the
+# header note.
+#Tue Dec 24 17:39:45 MST 2019
+sdk.dir=/home/ani/Android/Sdk
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/AndroidManifest.xml b/node_modules/react-native-twilio-programmable-voice/android/src/main/AndroidManifest.xml
index 501345c..21dfdd0 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/AndroidManifest.xml
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/AndroidManifest.xml
@@ -1,4 +1,5 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     package="com.hoxfon.react.RNTwilioVoice">
     <uses-permission android:name="android.permission.DISABLE_KEYGUARD"/>
+    <uses-permission android:name="android.permission.BLUETOOTH" />
 </manifest>
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java
index bace124..a68fb05 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/CallNotificationManager.java
@@ -15,34 +15,35 @@ import android.graphics.Color;
 import android.os.Build;
 import android.os.Bundle;
 import android.service.notification.StatusBarNotification;
-import android.support.v4.app.NotificationCompat;
 import android.util.Log;
 import android.view.WindowManager;
 
+import androidx.core.app.NotificationCompat;
+
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.twilio.voice.CallInvite;
+import com.twilio.voice.CancelledCallInvite;
 
 import java.util.List;
 
 import static android.content.Context.ACTIVITY_SERVICE;
-
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_ANSWER_CALL;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_REJECT_CALL;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_CLEAR_MISSED_CALLS_COUNT;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_HANGUP_CALL;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_INCOMING_CALL;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_MISSED_CALL;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_REJECT_CALL;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.CALL_SID_KEY;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.CLEAR_MISSED_CALLS_NOTIFICATION_ID;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.HANGUP_NOTIFICATION_ID;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.INCOMING_CALL_INVITE;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.INCOMING_CALL_NOTIFICATION_ID;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.NOTIFICATION_TYPE;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.CALL_SID_KEY;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.INCOMING_NOTIFICATION_PREFIX;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.MISSED_CALLS_GROUP;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.MISSED_CALLS_NOTIFICATION_ID;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.HANGUP_NOTIFICATION_ID;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.NOTIFICATION_TYPE;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.PREFERENCE_KEY;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_CLEAR_MISSED_CALLS_COUNT;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.CLEAR_MISSED_CALLS_NOTIFICATION_ID;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
 
 
 public class CallNotificationManager {
@@ -51,7 +52,8 @@ public class CallNotificationManager {
 
     private NotificationCompat.InboxStyle inboxStyle = new NotificationCompat.InboxStyle();
 
-    public CallNotificationManager() {}
+    public CallNotificationManager() {
+    }
 
     public int getApplicationImportance(ReactApplicationContext context) {
         ActivityManager activityManager = (ActivityManager) context.getSystemService(ACTIVITY_SERVICE);
@@ -115,10 +117,9 @@ public class CallNotificationManager {
     public void createIncomingCallNotification(ReactApplicationContext context,
                                                CallInvite callInvite,
                                                int notificationId,
-                                               Intent launchIntent)
-    {
+                                               Intent launchIntent) {
         if (BuildConfig.DEBUG) {
-            Log.d(TAG, "createIncomingCallNotification intent "+launchIntent.getFlags());
+            Log.d(TAG, "createIncomingCallNotification intent " + launchIntent.getFlags());
         }
         PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, launchIntent, PendingIntent.FLAG_UPDATE_CURRENT);
 
@@ -179,7 +180,7 @@ public class CallNotificationManager {
         notificationBuilder.addAction(R.drawable.ic_call_white_24dp, "ANSWER", pendingAnswerIntent);
 
         notificationManager.notify(notificationId, notificationBuilder.build());
-        TwilioVoiceModule.callNotificationMap.put(INCOMING_NOTIFICATION_PREFIX+callInvite.getCallSid(), notificationId);
+        TwilioVoiceModule.callNotificationMap.put(INCOMING_NOTIFICATION_PREFIX + callInvite.getCallSid(), notificationId);
     }
 
     public void initCallNotificationsChannel(NotificationManager notificationManager) {
@@ -245,7 +246,7 @@ public class CallNotificationManager {
         } else {
             inboxStyle.setBigContentTitle(String.valueOf(missedCalls) + " missed calls");
         }
-        inboxStyle.addLine("from: " +callInvite.getFrom());
+        inboxStyle.addLine("from: " + callInvite.getFrom());
         sharedPrefEditor.putInt(MISSED_CALLS_GROUP, missedCalls);
         sharedPrefEditor.commit();
 
@@ -307,12 +308,12 @@ public class CallNotificationManager {
     }
 
     public void removeIncomingCallNotification(ReactApplicationContext context,
-                                               CallInvite callInvite,
+                                               CancelledCallInvite callInvite,
                                                int notificationId) {
         Log.d(TAG, "removeIncomingCallNotification");
         NotificationManager notificationManager = (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);
         if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.M) {
-            if (callInvite != null && callInvite.getState() == CallInvite.State.PENDING) {
+            if (callInvite != null) {
                 /*
                  * If the incoming call message was cancelled then remove the notification by matching
                  * it with the call sid from the list of notifications in the notification drawer.
@@ -333,7 +334,7 @@ public class CallNotificationManager {
             if (notificationId != 0) {
                 notificationManager.cancel(notificationId);
             } else if (callInvite != null) {
-                String notificationKey = INCOMING_NOTIFICATION_PREFIX+callInvite.getCallSid();
+                String notificationKey = INCOMING_NOTIFICATION_PREFIX + callInvite.getCallSid();
                 if (TwilioVoiceModule.callNotificationMap.containsKey(notificationKey)) {
                     notificationId = TwilioVoiceModule.callNotificationMap.get(notificationKey);
                     notificationManager.cancel(notificationId);
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java
index 800ef6d..5ba2304 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/EventManager.java
@@ -1,8 +1,9 @@
 package com.hoxfon.react.RNTwilioVoice;
 
-import android.support.annotation.Nullable;
 import android.util.Log;
 
+import androidx.annotation.Nullable;
+
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.WritableMap;
 import com.facebook.react.modules.core.DeviceEventManagerModule;
@@ -11,16 +12,14 @@ import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
 
 public class EventManager {
 
-    private ReactApplicationContext mContext;
-
     public static final String EVENT_PROXIMITY = "proximity";
     public static final String EVENT_WIRED_HEADSET = "wiredHeadset";
-
     public static final String EVENT_DEVICE_READY = "deviceReady";
     public static final String EVENT_DEVICE_NOT_READY = "deviceNotReady";
     public static final String EVENT_CONNECTION_DID_CONNECT = "connectionDidConnect";
     public static final String EVENT_CONNECTION_DID_DISCONNECT = "connectionDidDisconnect";
     public static final String EVENT_DEVICE_DID_RECEIVE_INCOMING = "deviceDidReceiveIncoming";
+    private ReactApplicationContext mContext;
 
     public EventManager(ReactApplicationContext context) {
         mContext = context;
@@ -28,12 +27,12 @@ public class EventManager {
 
     public void sendEvent(String eventName, @Nullable WritableMap params) {
         if (BuildConfig.DEBUG) {
-            Log.d(TAG, "sendEvent "+eventName+" params "+params);
+            Log.d(TAG, "sendEvent " + eventName + " params " + params);
         }
         if (mContext.hasActiveCatalystInstance()) {
             mContext
-                .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
-                .emit(eventName, params);
+                    .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
+                    .emit(eventName, params);
         } else {
             if (BuildConfig.DEBUG) {
                 Log.d(TAG, "failed Catalyst instance not active");
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java
index f75dad2..cdfcab7 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/HeadsetManager.java
@@ -16,11 +16,10 @@ import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
 
 public class HeadsetManager {
 
-    private BroadcastReceiver wiredHeadsetReceiver;
     private static final String ACTION_HEADSET_PLUG = (android.os.Build.VERSION.SDK_INT >= 21)
-        ? AudioManager.ACTION_HEADSET_PLUG
-        : Intent.ACTION_HEADSET_PLUG;
-
+            ? AudioManager.ACTION_HEADSET_PLUG
+            : Intent.ACTION_HEADSET_PLUG;
+    private BroadcastReceiver wiredHeadsetReceiver;
     private EventManager eventManager;
 
     public HeadsetManager(EventManager em) {
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java
index 69575f1..997b586 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/ProximityManager.java
@@ -151,9 +151,9 @@ public class ProximityManager {
             // SensorManager.SENSOR_DELAY_UI(60 ms),
             // SensorManager.SENSOR_DELAY_NORMAL(200 ms)
             sensorManager.registerListener(
-                proximityListener,
-                proximitySensor,
-                SensorManager.SENSOR_DELAY_NORMAL
+                    proximityListener,
+                    proximitySensor,
+                    SensorManager.SENSOR_DELAY_NORMAL
             );
         }
     }
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java
index cda9660..0889624 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/SoundPoolManager.java
@@ -7,8 +7,8 @@ import android.net.Uri;
 
 public class SoundPoolManager {
 
-    private boolean playing = false;
     private static SoundPoolManager instance;
+    private boolean playing = false;
     private Ringtone ringtone = null;
 
     private SoundPoolManager(Context context) {
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java
index 774ad93..aea008f 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoiceModule.java
@@ -14,35 +14,36 @@ import android.media.AudioAttributes;
 import android.media.AudioFocusRequest;
 import android.media.AudioManager;
 import android.os.Build;
-
-import android.support.v4.app.ActivityCompat;
-import android.support.v4.content.ContextCompat;
-import android.support.v4.content.LocalBroadcastManager;
 import android.util.Log;
 import android.view.Window;
 import android.view.WindowManager;
 
-import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
-import com.facebook.react.bridge.AssertionException;
-import com.facebook.react.bridge.LifecycleEventListener;
-import com.facebook.react.bridge.ReadableMap;
+import androidx.annotation.NonNull;
+import androidx.core.app.ActivityCompat;
+import androidx.core.content.ContextCompat;
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
 
 import com.facebook.react.bridge.ActivityEventListener;
 import com.facebook.react.bridge.Arguments;
-import com.facebook.react.bridge.ReadableMapKeySetIterator;
-import com.facebook.react.bridge.ReadableType;
-import com.facebook.react.bridge.WritableMap;
-
-import com.facebook.react.bridge.ReactApplicationContext;
+import com.facebook.react.bridge.AssertionException;
+import com.facebook.react.bridge.JSApplicationIllegalArgumentException;
+import com.facebook.react.bridge.LifecycleEventListener;
 import com.facebook.react.bridge.Promise;
+import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContextBaseJavaModule;
 import com.facebook.react.bridge.ReactMethod;
-
-import com.google.firebase.FirebaseApp;
+import com.facebook.react.bridge.ReadableMap;
+import com.facebook.react.bridge.ReadableMapKeySetIterator;
+import com.facebook.react.bridge.ReadableType;
+import com.facebook.react.bridge.WritableMap;
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.Task;
 import com.google.firebase.iid.FirebaseInstanceId;
+import com.google.firebase.iid.InstanceIdResult;
 import com.twilio.voice.Call;
 import com.twilio.voice.CallException;
 import com.twilio.voice.CallInvite;
+import com.twilio.voice.ConnectOptions;
 import com.twilio.voice.LogLevel;
 import com.twilio.voice.RegistrationException;
 import com.twilio.voice.RegistrationListener;
@@ -59,66 +60,53 @@ import static com.hoxfon.react.RNTwilioVoice.EventManager.EVENT_DEVICE_READY;
 
 public class TwilioVoiceModule extends ReactContextBaseJavaModule implements ActivityEventListener, LifecycleEventListener {
 
-    public static String TAG = "RNTwilioVoice";
-
-    private static final int MIC_PERMISSION_REQUEST_CODE = 1;
-
-    private AudioManager audioManager;
-    private int originalAudioMode = AudioManager.MODE_NORMAL;
-
-    private boolean isReceiverRegistered = false;
-    private VoiceBroadcastReceiver voiceBroadcastReceiver;
-
-    // Empty HashMap, contains parameters for the Outbound call
-    private HashMap<String, String> twiMLParams = new HashMap<>();
-
-    public static final String INCOMING_CALL_INVITE          = "INCOMING_CALL_INVITE";
+    public static final String INCOMING_CALL_INVITE = "INCOMING_CALL_INVITE";
     public static final String INCOMING_CALL_NOTIFICATION_ID = "INCOMING_CALL_NOTIFICATION_ID";
-    public static final String NOTIFICATION_TYPE             = "NOTIFICATION_TYPE";
-
+    public static final String NOTIFICATION_TYPE = "NOTIFICATION_TYPE";
+    public static final String CANCELLED_CALL_INVITE = "CANCELLED_CALL_INVITE";
     public static final String ACTION_INCOMING_CALL = "com.hoxfon.react.TwilioVoice.INCOMING_CALL";
-    public static final String ACTION_FCM_TOKEN     = "com.hoxfon.react.TwilioVoice.ACTION_FCM_TOKEN";
-    public static final String ACTION_MISSED_CALL   = "com.hoxfon.react.TwilioVoice.MISSED_CALL";
-    public static final String ACTION_ANSWER_CALL   = "com.hoxfon.react.TwilioVoice.ANSWER_CALL";
-    public static final String ACTION_REJECT_CALL   = "com.hoxfon.react.TwilioVoice.REJECT_CALL";
-    public static final String ACTION_HANGUP_CALL   = "com.hoxfon.react.TwilioVoice.HANGUP_CALL";
+    public static final String ACTION_CANCEL_CALL = "com.hoxfon.react.TwilioVoice.CANCEL_CALL";
+    public static final String ACTION_FCM_TOKEN = "com.hoxfon.react.TwilioVoice.ACTION_FCM_TOKEN";
+    public static final String ACTION_MISSED_CALL = "com.hoxfon.react.TwilioVoice.MISSED_CALL";
+    public static final String ACTION_ANSWER_CALL = "com.hoxfon.react.TwilioVoice.ANSWER_CALL";
+    public static final String ACTION_REJECT_CALL = "com.hoxfon.react.TwilioVoice.REJECT_CALL";
+    public static final String ACTION_HANGUP_CALL = "com.hoxfon.react.TwilioVoice.HANGUP_CALL";
     public static final String ACTION_CLEAR_MISSED_CALLS_COUNT = "com.hoxfon.react.TwilioVoice.CLEAR_MISSED_CALLS_COUNT";
-
     public static final String CALL_SID_KEY = "CALL_SID";
     public static final String INCOMING_NOTIFICATION_PREFIX = "Incoming_";
     public static final String MISSED_CALLS_GROUP = "MISSED_CALLS";
     public static final int MISSED_CALLS_NOTIFICATION_ID = 1;
     public static final int HANGUP_NOTIFICATION_ID = 11;
     public static final int CLEAR_MISSED_CALLS_NOTIFICATION_ID = 21;
-
     public static final String PREFERENCE_KEY = "com.hoxfon.react.TwilioVoice.PREFERENCE_FILE_KEY";
-
+    private static final int MIC_PERMISSION_REQUEST_CODE = 1;
+    public static String TAG = "RNTwilioVoice";
+    static Map<String, Integer> callNotificationMap;
+    private AudioManager audioManager;
+    private int originalAudioMode = AudioManager.MODE_NORMAL;
+    private boolean isReceiverRegistered = false;
+    private VoiceBroadcastReceiver voiceBroadcastReceiver;
+    // Empty HashMap, contains parameters for the Outbound call
+    private HashMap<String, String> twiMLParams = new HashMap<>();
     private NotificationManager notificationManager;
     private CallNotificationManager callNotificationManager;
     private ProximityManager proximityManager;
-
     private String accessToken;
-
     private String toNumber = "";
     private String toName = "";
-
-    static Map<String, Integer> callNotificationMap;
-
-    private RegistrationListener registrationListener = registrationListener();
-    private Call.Listener callListener = callListener();
-
     private CallInvite activeCallInvite;
     private Call activeCall;
-
     // this variable determines when to create missed calls notifications
     private Boolean callAccepted = false;
-
     private AudioFocusRequest focusRequest;
     private HeadsetManager headsetManager;
     private EventManager eventManager;
+    private RegistrationListener registrationListener = registrationListener();
+    private int savedAudioMode = AudioManager.MODE_INVALID;
+    private Call.Listener callListener = callListener();
 
     public TwilioVoiceModule(ReactApplicationContext reactContext,
-    boolean shouldAskForMicPermission) {
+                             boolean shouldAskForMicPermission) {
         super(reactContext);
         if (BuildConfig.DEBUG) {
             Voice.setLogLevel(LogLevel.DEBUG);
@@ -175,8 +163,8 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
     @Override
     public void onHostDestroy() {
         disconnect();
-        callNotificationManager.removeHangupNotification(getReactApplicationContext());
-        unsetAudioFocus();
+        // callNotificationManager.removeHangupNotification(getReactApplicationContext());
+        setAudioFocus(false);
     }
 
     @Override
@@ -214,18 +202,36 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
 
     private Call.Listener callListener() {
         return new Call.Listener() {
+            /*
+             * This callback is emitted once before the Call.Listener.onConnected() callback when
+             * the callee is being alerted of a Call. The behavior of this callback is determined by
+             * the answerOnBridge flag provided in the Dial verb of your TwiML application
+             * associated with this client. If the answerOnBridge flag is false, which is the
+             * default, the Call.Listener.onConnected() callback will be emitted immediately after
+             * Call.Listener.onRinging(). If the answerOnBridge flag is true, this will cause the
+             * call to emit the onConnected callback only after the call is answered.
+             * See answeronbridge for more details on how to use it with the Dial TwiML verb. If the
+             * twiML response contains a Say verb, then the call will emit the
+             * Call.Listener.onConnected callback immediately after Call.Listener.onRinging() is
+             * raised, irrespective of the value of answerOnBridge being set to true or false
+             */
+            @Override
+            public void onRinging(Call call) {
+                Log.d(TAG, "Ringing");
+            }
+
             @Override
             public void onConnected(Call call) {
                 if (BuildConfig.DEBUG) {
-                    Log.d(TAG, "CALL CONNECTED callListener().onConnected call state = "+call.getState());
+                    Log.d(TAG, "CALL CONNECTED callListener().onConnected call state = " + call.getState());
                 }
-                setAudioFocus();
+                setAudioFocus(true);
                 proximityManager.startProximitySensor();
                 headsetManager.startWiredHeadsetEvent(getReactApplicationContext());
 
                 WritableMap params = Arguments.createMap();
                 if (call != null) {
-                    params.putString("call_sid",   call.getSid());
+                    params.putString("call_sid", call.getSid());
                     params.putString("call_state", call.getState().name());
                     params.putString("call_from", call.getFrom());
                     params.putString("call_to", call.getTo());
@@ -236,15 +242,25 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
                         caller = toNumber;
                     }
                     activeCall = call;
-                    callNotificationManager.createHangupLocalNotification(getReactApplicationContext(),
-                            call.getSid(), caller);
+//                    callNotificationManager.createHangupLocalNotification(getReactApplicationContext(),
+//                            call.getSid(), caller);
                 }
                 eventManager.sendEvent(EVENT_CONNECTION_DID_CONNECT, params);
             }
 
+            @Override
+            public void onReconnecting(Call call, CallException callException) {
+                Log.d(TAG, "onReconnecting");
+            }
+
+            @Override
+            public void onReconnected(Call call) {
+                Log.d(TAG, "onReconnected");
+            }
+
             @Override
             public void onDisconnected(Call call, CallException error) {
-                unsetAudioFocus();
+                setAudioFocus(false);
                 proximityManager.stopProximitySensor();
                 headsetManager.stopWiredHeadsetEvent(getReactApplicationContext());
                 callAccepted = false;
@@ -271,14 +287,14 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
                     activeCall = null;
                 }
                 eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, params);
-                callNotificationManager.removeHangupNotification(getReactApplicationContext());
+                // callNotificationManager.removeHangupNotification(getReactApplicationContext());
                 toNumber = "";
                 toName = "";
             }
 
             @Override
             public void onConnectFailure(Call call, CallException error) {
-                unsetAudioFocus();
+                setAudioFocus(false);
                 proximityManager.stopProximitySensor();
                 callAccepted = false;
                 if (BuildConfig.DEBUG) {
@@ -286,7 +302,7 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
                 }
 
                 Log.e(TAG, String.format("CallListener onDisconnected error: %d, %s",
-                    error.getErrorCode(), error.getMessage()));
+                        error.getErrorCode(), error.getMessage()));
 
                 WritableMap params = Arguments.createMap();
                 params.putString("err", error.getMessage());
@@ -302,7 +318,7 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
                     activeCall = null;
                 }
                 eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, params);
-                callNotificationManager.removeHangupNotification(getReactApplicationContext());
+                // callNotificationManager.removeHangupNotification(getReactApplicationContext());
                 toNumber = "";
                 toName = "";
             }
@@ -386,7 +402,7 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
         if (intent.getAction().equals(ACTION_INCOMING_CALL)) {
             activeCallInvite = intent.getParcelableExtra(INCOMING_CALL_INVITE);
 
-            if (activeCallInvite != null && (activeCallInvite.getState() == CallInvite.State.PENDING)) {
+            if (activeCallInvite != null) { //  && (activeCallInvite.getState() == CallInvite.State.PENDING)
                 callAccepted = false;
                 if (BuildConfig.DEBUG) {
                     Log.d(TAG, "handleIncomingCallIntent state = PENDING");
@@ -404,62 +420,49 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
                 int appImportance = callNotificationManager.getApplicationImportance(getReactApplicationContext());
                 if (appImportance == RunningAppProcessInfo.IMPORTANCE_FOREGROUND ||
                         appImportance == RunningAppProcessInfo.IMPORTANCE_SERVICE) {
-
                     WritableMap params = Arguments.createMap();
                     params.putString("call_sid", activeCallInvite.getCallSid());
                     params.putString("call_from", activeCallInvite.getFrom());
                     params.putString("call_to", activeCallInvite.getTo());
-                    params.putString("call_state", activeCallInvite.getState().name());
+                    params.putString("call_state", "PENDING");
                     eventManager.sendEvent(EVENT_DEVICE_DID_RECEIVE_INCOMING, params);
                 }
-
-
             } else {
-                if (BuildConfig.DEBUG) {
-                    Log.d(TAG, "====> BEGIN handleIncomingCallIntent when activeCallInvite != PENDING");
-                }
-                // this block is executed when the callInvite is cancelled and:
-                //   - the call is answered (activeCall != null)
-                //   - the call is rejected
 
-                SoundPoolManager.getInstance(getReactApplicationContext()).stopRinging();
+            }
+        } else if (intent.getAction().equals(ACTION_CANCEL_CALL)) {
+            if (BuildConfig.DEBUG) {
+                Log.d(TAG, "====> BEGIN handleIncomingCallIntent when activeCallInvite != PENDING");
+            }
+            // this block is executed when the callInvite is cancelled and:
+            //   - the call is answered (activeCall != null)
+            //   - the call is rejected
 
-                // the call is not active yet
-                if (activeCall == null) {
+            SoundPoolManager.getInstance(getReactApplicationContext()).stopRinging();
 
-                    if (activeCallInvite != null) {
-                        if (BuildConfig.DEBUG) {
-                            Log.d(TAG, "activeCallInvite state = " + activeCallInvite.getState());
-                        }
-                        if (BuildConfig.DEBUG) {
-                            Log.d(TAG, "activeCallInvite was cancelled by " + activeCallInvite.getFrom());
-                        }
-                        if (!callAccepted) {
-                            if (BuildConfig.DEBUG) {
-                                Log.d(TAG, "creating a missed call, activeCallInvite state: " + activeCallInvite.getState());
-                            }
-                            callNotificationManager.createMissedCallNotification(getReactApplicationContext(), activeCallInvite);
-                            int appImportance = callNotificationManager.getApplicationImportance(getReactApplicationContext());
-                            if (appImportance != RunningAppProcessInfo.IMPORTANCE_BACKGROUND) {
-                                WritableMap params = Arguments.createMap();
-                                params.putString("call_sid", activeCallInvite.getCallSid());
-                                params.putString("call_from", activeCallInvite.getFrom());
-                                params.putString("call_to", activeCallInvite.getTo());
-                                params.putString("call_state", activeCallInvite.getState().name());
-                                eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, params);
-                            }
-                        }
-                    }
-                    clearIncomingNotification(activeCallInvite);
-                } else {
-                    if (BuildConfig.DEBUG) {
-                        Log.d(TAG, "activeCallInvite was answered. Call " + activeCall);
-                    }
-                }
+            if (BuildConfig.DEBUG) {
+                // Log.d(TAG, "activeCallInvite state = " + activeCallInvite.getState());
+            }
+            if (BuildConfig.DEBUG) {
+                Log.d(TAG, "activeCallInvite was cancelled by " + activeCallInvite.getFrom());
+            }
+            if (!callAccepted) {
                 if (BuildConfig.DEBUG) {
-                    Log.d(TAG, "====> END");
+                    Log.d(TAG, "creating a missed call");
+                }
+                // callNotificationManager.createMissedCallNotification(getReactApplicationContext(), activeCallInvite);
+                int appImportance = callNotificationManager.getApplicationImportance(getReactApplicationContext());
+                if (appImportance != RunningAppProcessInfo.IMPORTANCE_BACKGROUND) {
+                    WritableMap params = Arguments.createMap();
+                    params.putString("call_sid", activeCallInvite.getCallSid());
+                    params.putString("call_from", activeCallInvite.getFrom());
+                    params.putString("call_to", activeCallInvite.getTo());
+                    params.putString("call_state", "DISCONNECTED");
+                    eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, params);
                 }
             }
+
+            // clearIncomingNotification(activeCallInvite);
         } else if (intent.getAction().equals(ACTION_FCM_TOKEN)) {
             if (BuildConfig.DEBUG) {
                 Log.d(TAG, "handleIncomingCallIntent ACTION_FCM_TOKEN");
@@ -468,27 +471,6 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
         }
     }
 
-    private class VoiceBroadcastReceiver extends BroadcastReceiver {
-
-        @Override
-        public void onReceive(Context context, Intent intent) {
-            String action = intent.getAction();
-            if (action.equals(ACTION_INCOMING_CALL)) {
-                if (BuildConfig.DEBUG) {
-                    Log.d(TAG, "VoiceBroadcastReceiver.onReceive ACTION_INCOMING_CALL. Intent "+ intent.getExtras());
-                }
-                handleIncomingCallIntent(intent);
-            } else if (action.equals(ACTION_MISSED_CALL)) {
-                SharedPreferences sharedPref = getReactApplicationContext().getSharedPreferences(PREFERENCE_KEY, Context.MODE_PRIVATE);
-                SharedPreferences.Editor sharedPrefEditor = sharedPref.edit();
-                sharedPrefEditor.remove(MISSED_CALLS_GROUP);
-                sharedPrefEditor.commit();
-            } else {
-                Log.e(TAG, "received broadcast unhandled action " + action);
-            }
-        }
-    }
-
     @ReactMethod
     public void initWithAccessToken(final String accessToken, Promise promise) {
         if (accessToken.equals("")) {
@@ -496,13 +478,14 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
             return;
         }        
         
-        if(!checkPermissionForMicrophone()) {
-            promise.reject(new AssertionException("Can't init without microphone permission"));
+        if (!checkPermissionForMicrophone()) {
+            promise.reject(new AssertionException("Allow microphone permission"));
+            return;
         }        
 
         TwilioVoiceModule.this.accessToken = accessToken;
         if (BuildConfig.DEBUG) {
-            Log.d(TAG, "initWithAccessToken ACTION_FCM_TOKEN");
+            Log.d(TAG, "initWithAccessToken");
         }
         registerForCallInvites();
         WritableMap params = Arguments.createMap();
@@ -512,7 +495,7 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
 
     private void clearIncomingNotification(CallInvite callInvite) {
         if (BuildConfig.DEBUG) {
-            Log.d(TAG, "clearIncomingNotification() callInvite state: "+ callInvite.getState());
+            // Log.d(TAG, "clearIncomingNotification() callInvite state: "+ callInvite.getState());
         }
         if (callInvite != null && callInvite.getCallSid() != null) {
             // remove incoming call notification
@@ -521,7 +504,7 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
             if (TwilioVoiceModule.callNotificationMap.containsKey(notificationKey)) {
                 notificationId = TwilioVoiceModule.callNotificationMap.get(notificationKey);
             }
-            callNotificationManager.removeIncomingCallNotification(getReactApplicationContext(), null, notificationId);
+            // callNotificationManager.removeIncomingCallNotification(getReactApplicationContext(), null, notificationId);
             TwilioVoiceModule.callNotificationMap.remove(notificationKey);
         }
 //        activeCallInvite = null;
@@ -533,47 +516,54 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
      * If a valid google-services.json has not been provided or the FirebaseInstanceId has not been
      * initialized the fcmToken will be null.
      *
-     * In the case where the FirebaseInstanceId has not yet been initialized the
-     * VoiceFirebaseInstanceIDService.onTokenRefresh should result in a LocalBroadcast to this
-     * activity which will attempt registerForCallInvites again.
-     *
      */
     private void registerForCallInvites() {
-        FirebaseApp.initializeApp(getReactApplicationContext());
-        final String fcmToken = FirebaseInstanceId.getInstance().getToken();
-        if (fcmToken != null) {
-            if (BuildConfig.DEBUG) {
-                Log.d(TAG, "Registering with FCM");
-            }
-            Voice.register(getReactApplicationContext(), accessToken, Voice.RegistrationChannel.FCM, fcmToken, registrationListener);
-        }
+        FirebaseInstanceId.getInstance().getInstanceId()
+                .addOnCompleteListener(new OnCompleteListener<InstanceIdResult>() {
+                    @Override
+                    public void onComplete(@NonNull Task<InstanceIdResult> task) {
+                        if (!task.isSuccessful()) {
+                            Log.w(TAG, "getInstanceId failed", task.getException());
+                            return;
+                        }
+
+                        // Get new Instance ID token
+                        String fcmToken = task.getResult().getToken();
+                        if (fcmToken != null) {
+                            if (BuildConfig.DEBUG) {
+                                Log.d(TAG, "Registering with FCM");
+                            }
+                            Voice.register(accessToken, Voice.RegistrationChannel.FCM, fcmToken, registrationListener);
+                        }
+                    }
+                });
     }
 
     @ReactMethod
     public void accept() {
         callAccepted = true;
         SoundPoolManager.getInstance(getReactApplicationContext()).stopRinging();
-        if (activeCallInvite != null){
-            if (activeCallInvite.getState() == CallInvite.State.PENDING) {
-                if (BuildConfig.DEBUG) {
-                    Log.d(TAG, "accept() activeCallInvite.getState() PENDING");
-                }
-                activeCallInvite.accept(getReactApplicationContext(), callListener);
-                clearIncomingNotification(activeCallInvite);
-            } else {
-                // when the user answers a call from a notification before the react-native App
-                // is completely initialised, and the first event has been skipped
-                // re-send connectionDidConnect message to JS
-                WritableMap params = Arguments.createMap();
-                params.putString("call_sid",   activeCallInvite.getCallSid());
-                params.putString("call_from",  activeCallInvite.getFrom());
-                params.putString("call_to",    activeCallInvite.getTo());
-                params.putString("call_state", activeCallInvite.getState().name());
-                callNotificationManager.createHangupLocalNotification(getReactApplicationContext(),
-                        activeCallInvite.getCallSid(),
-                        activeCallInvite.getFrom());
-                eventManager.sendEvent(EVENT_CONNECTION_DID_CONNECT, params);
+        if (activeCallInvite != null) {
+            // if (activeCallInvite.getState() == CallInvite.State.PENDING) {
+            if (BuildConfig.DEBUG) {
+                Log.d(TAG, "accept() activeCallInvite.getState() PENDING");
             }
+            activeCallInvite.accept(getReactApplicationContext(), callListener);
+            // clearIncomingNotification(activeCallInvite);
+//        } else {
+            // when the user answers a call from a notification before the react-native App
+            // is completely initialised, and the first event has been skipped
+            // re-send connectionDidConnect message to JS
+//                 WritableMap params = Arguments.createMap();
+//                 params.putString("call_sid",   activeCallInvite.getCallSid());
+//                 params.putString("call_from",  activeCallInvite.getFrom());
+//                 params.putString("call_to",    activeCallInvite.getTo());
+//                 // params.putString("call_state", activeCallInvite.getState().name());
+//                 callNotificationManager.createHangupLocalNotification(getReactApplicationContext(),
+//                         activeCallInvite.getCallSid(),
+//                         activeCallInvite.getFrom());
+//                 eventManager.sendEvent(EVENT_CONNECTION_DID_CONNECT, params);
+//        }
         } else {
             eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, null);
         }
@@ -584,13 +574,13 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
         callAccepted = false;
         SoundPoolManager.getInstance(getReactApplicationContext()).stopRinging();
         WritableMap params = Arguments.createMap();
-        if (activeCallInvite != null){
-            params.putString("call_sid",   activeCallInvite.getCallSid());
-            params.putString("call_from",  activeCallInvite.getFrom());
-            params.putString("call_to",    activeCallInvite.getTo());
-            params.putString("call_state", activeCallInvite.getState().name());
+        if (activeCallInvite != null) {
+            params.putString("call_sid", activeCallInvite.getCallSid());
+            params.putString("call_from", activeCallInvite.getFrom());
+            params.putString("call_to", activeCallInvite.getTo());
+            params.putString("call_state", "DISCONNECTED");
             activeCallInvite.reject(getReactApplicationContext());
-            clearIncomingNotification(activeCallInvite);
+            // clearIncomingNotification(activeCallInvite);
         }
         eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, params);
     }
@@ -600,20 +590,21 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
         callAccepted = false;
         SoundPoolManager.getInstance(getReactApplicationContext()).stopRinging();
         WritableMap params = Arguments.createMap();
-        if (activeCallInvite != null){
-            params.putString("call_sid",   activeCallInvite.getCallSid());
-            params.putString("call_from",  activeCallInvite.getFrom());
-            params.putString("call_to",    activeCallInvite.getTo());
-            params.putString("call_state", activeCallInvite.getState().name());
-            clearIncomingNotification(activeCallInvite);
+        if (activeCallInvite != null) {
+            params.putString("call_sid", activeCallInvite.getCallSid());
+            params.putString("call_from", activeCallInvite.getFrom());
+            params.putString("call_to", activeCallInvite.getTo());
+            params.putString("call_state", "BUSY");
+            // clearIncomingNotification(activeCallInvite);
         }
         eventManager.sendEvent(EVENT_CONNECTION_DID_DISCONNECT, params);
     }
 
     @ReactMethod
     public void connect(ReadableMap params) {
+
         if (BuildConfig.DEBUG) {
-            Log.d(TAG, "connect params: "+params);
+            Log.d(TAG, "connect params: " + params);
         }
         WritableMap errParams = Arguments.createMap();
         if (accessToken == null) {
@@ -635,6 +626,7 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
             toName = params.getString("ToName");
         }
 
+
         twiMLParams.clear();
 
         ReadableMapKeySetIterator iterator = params.keySetIterator();
@@ -661,7 +653,11 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
             }
         }
 
-        activeCall = Voice.call(getReactApplicationContext(), accessToken, twiMLParams, callListener);
+        ConnectOptions connectOptions = new ConnectOptions.Builder(accessToken)
+                .params(twiMLParams)
+                .build();
+
+        activeCall = Voice.connect(getReactApplicationContext(), connectOptions, callListener);
     }
 
     @ReactMethod
@@ -690,25 +686,26 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
     public void getActiveCall(Promise promise) {
         if (activeCall != null) {
             if (BuildConfig.DEBUG) {
-                Log.d(TAG, "Active call found state = "+activeCall.getState());
+                Log.d(TAG, "Active call found state = " + activeCall.getState());
             }
             WritableMap params = Arguments.createMap();
-            params.putString("call_sid",   activeCall.getSid());
-            params.putString("call_from",  activeCall.getFrom());
-            params.putString("call_to",    activeCall.getTo());
+            params.putString("call_sid", activeCall.getSid());
+            params.putString("call_from", activeCall.getFrom());
+            params.putString("call_to", activeCall.getTo());
             params.putString("call_state", activeCall.getState().name());
             promise.resolve(params);
             return;
         }
         if (activeCallInvite != null) {
             if (BuildConfig.DEBUG) {
-                Log.d(TAG, "Active call invite found state = "+activeCallInvite.getState());
+                // Log.d(TAG, "Active call invite found state = "+activeCallInvite.getState());
             }
             WritableMap params = Arguments.createMap();
-            params.putString("call_sid",   activeCallInvite.getCallSid());
-            params.putString("call_from",  activeCallInvite.getFrom());
-            params.putString("call_to",    activeCallInvite.getTo());
-            params.putString("call_state", activeCallInvite.getState().name());
+            params.putString("call_sid", activeCallInvite.getCallSid());
+            params.putString("call_from", activeCallInvite.getFrom());
+            params.putString("call_to", activeCallInvite.getTo());
+            if (activeCall != null)
+                params.putString("call_state", activeCall.getState().name());
             promise.resolve(params);
             return;
         }
@@ -722,53 +719,46 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
         audioManager.setSpeakerphoneOn(value);
     }
 
-    private void setAudioFocus() {
-        if (audioManager == null) {
-            return;
-        }
-        originalAudioMode = audioManager.getMode();
-        // Request audio focus before making any device switch
-        if (Build.VERSION.SDK_INT >= 26) {
-            AudioAttributes playbackAttributes = new AudioAttributes.Builder()
-                .setUsage(AudioAttributes.USAGE_VOICE_COMMUNICATION)
-                .setContentType(AudioAttributes.CONTENT_TYPE_SPEECH)
-                .build();
-            focusRequest = new AudioFocusRequest.Builder(AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE)
-                .setAudioAttributes(playbackAttributes)
-                .setAcceptsDelayedFocusGain(true)
-                .setOnAudioFocusChangeListener(new AudioManager.OnAudioFocusChangeListener() {
-                    @Override
-                    public void onAudioFocusChange(int i) { }
-                })
-                .build();
-            audioManager.requestAudioFocus(focusRequest);
-        } else {
-            audioManager.requestAudioFocus(
-                null,
-                AudioManager.STREAM_VOICE_CALL,
-                AudioManager.AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE
-            );
-        }
-        /*
-         * Start by setting MODE_IN_COMMUNICATION as default audio mode. It is
-         * required to be in this mode when playout and/or recording starts for
-         * best possible VoIP performance. Some devices have difficulties with speaker mode
-         * if this is not set.
-         */
-        audioManager.setMode(AudioManager.MODE_IN_COMMUNICATION);
-    }
+    private void setAudioFocus(boolean setFocus) {
+        if (audioManager != null) {
+            if (setFocus) {
+                savedAudioMode = audioManager.getMode();
+                // Request audio focus before making any device switch.
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
+                    AudioAttributes playbackAttributes = new AudioAttributes.Builder()
+                            .setUsage(AudioAttributes.USAGE_VOICE_COMMUNICATION)
+                            .setContentType(AudioAttributes.CONTENT_TYPE_SPEECH)
+                            .build();
+                    AudioFocusRequest focusRequest = new AudioFocusRequest.Builder(AudioManager.AUDIOFOCUS_GAIN_TRANSIENT)
+                            .setAudioAttributes(playbackAttributes)
+                            .setAcceptsDelayedFocusGain(true)
+                            .setOnAudioFocusChangeListener(new AudioManager.OnAudioFocusChangeListener() {
+                                @Override
+                                public void onAudioFocusChange(int i) {
+                                }
+                            })
+                            .build();
+                    audioManager.requestAudioFocus(focusRequest);
+                } else {
+                    int focusRequestResult = audioManager.requestAudioFocus(new AudioManager.OnAudioFocusChangeListener() {
 
-    private void unsetAudioFocus() {
-        if (audioManager == null) {
-            return;
-        }
-        audioManager.setMode(originalAudioMode);
-        if (Build.VERSION.SDK_INT >= 26) {
-            if (focusRequest != null) {
-                audioManager.abandonAudioFocusRequest(focusRequest);
+                                                                                @Override
+                                                                                public void onAudioFocusChange(int focusChange) {
+                                                                                }
+                                                                            }, AudioManager.STREAM_VOICE_CALL,
+                            AudioManager.AUDIOFOCUS_GAIN_TRANSIENT);
+                }
+                /*
+                 * Start by setting MODE_IN_COMMUNICATION as default audio mode. It is
+                 * required to be in this mode when playout and/or recording starts for
+                 * best possible VoIP performance. Some devices have difficulties with speaker mode
+                 * if this is not set.
+                 */
+                audioManager.setMode(AudioManager.MODE_IN_COMMUNICATION);
+            } else {
+                audioManager.setMode(savedAudioMode);
+                audioManager.abandonAudioFocus(null);
             }
-        } else {
-            audioManager.abandonAudioFocus(null);
         }
     }
 
@@ -778,13 +768,35 @@ public class TwilioVoiceModule extends ReactContextBaseJavaModule implements Act
     }
 
     private void requestPermissionForMicrophone() {
-        if (getCurrentActivity() != null) {
-            if (ActivityCompat.shouldShowRequestPermissionRationale(getCurrentActivity(), Manifest.permission.RECORD_AUDIO)) {
-    //            Snackbar.make(coordinatorLayout,
-    //                    "Microphone permissions needed. Please allow in your application settings.",
-    //                    SNACKBAR_DURATION).show();
+        if (getCurrentActivity() == null) {
+            return;
+        }
+        if (ActivityCompat.shouldShowRequestPermissionRationale(getCurrentActivity(), Manifest.permission.RECORD_AUDIO)) {
+//            Snackbar.make(coordinatorLayout,
+//                    "Microphone permissions needed. Please allow in your application settings.",
+//                    SNACKBAR_DURATION).show();
+        } else {
+            ActivityCompat.requestPermissions(getCurrentActivity(), new String[]{Manifest.permission.RECORD_AUDIO}, MIC_PERMISSION_REQUEST_CODE);
+        }
+    }
+
+    private class VoiceBroadcastReceiver extends BroadcastReceiver {
+
+        @Override
+        public void onReceive(Context context, Intent intent) {
+            String action = intent.getAction();
+            if (action.equals(ACTION_INCOMING_CALL)) {
+                if (BuildConfig.DEBUG) {
+                    Log.d(TAG, "VoiceBroadcastReceiver.onReceive ACTION_INCOMING_CALL. Intent " + intent.getExtras());
+                }
+                handleIncomingCallIntent(intent);
+            } else if (action.equals(ACTION_MISSED_CALL)) {
+                SharedPreferences sharedPref = getReactApplicationContext().getSharedPreferences(PREFERENCE_KEY, Context.MODE_PRIVATE);
+                SharedPreferences.Editor sharedPrefEditor = sharedPref.edit();
+                sharedPrefEditor.remove(MISSED_CALLS_GROUP);
+                sharedPrefEditor.commit();
             } else {
-                ActivityCompat.requestPermissions(getCurrentActivity(), new String[]{Manifest.permission.RECORD_AUDIO}, MIC_PERMISSION_REQUEST_CODE);
+                Log.e(TAG, "received broadcast unhandled action " + action);
             }
         }
     }
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java
index d69409d..cbf8151 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/TwilioVoicePackage.java
@@ -6,13 +6,14 @@ import com.facebook.react.bridge.NativeModule;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.uimanager.ViewManager;
 
-import java.util.Collections;
 import java.util.ArrayList;
+import java.util.Collections;
 import java.util.List;
 
 public class TwilioVoicePackage implements ReactPackage {
 
     private boolean mShouldAskForPermission;
+
     public TwilioVoicePackage() {
         mShouldAskForPermission = true;
     }
@@ -20,6 +21,7 @@ public class TwilioVoicePackage implements ReactPackage {
     public TwilioVoicePackage(boolean shouldAskForPermissions) {
         mShouldAskForPermission = shouldAskForPermissions;
     }
+
     // Deprecated in RN 0.47.0
     public List<Class<? extends JavaScriptModule>> createJSModules() {
         return Collections.emptyList();
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseInstanceIDService.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseInstanceIDService.java
deleted file mode 100644
index 9154661..0000000
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseInstanceIDService.java
+++ /dev/null
@@ -1,43 +0,0 @@
-package com.hoxfon.react.RNTwilioVoice.fcm;
-
-import android.content.Intent;
-import android.support.v4.content.LocalBroadcastManager;
-import android.util.Log;
-
-import com.google.firebase.iid.FirebaseInstanceId;
-import com.google.firebase.iid.FirebaseInstanceIdService;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_FCM_TOKEN;
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
-
-public class VoiceFirebaseInstanceIDService extends FirebaseInstanceIdService {
-
-    /**
-     * Called if InstanceID token is updated. This may occur if the security of
-     * the previous token had been compromised. Note that this is called when the InstanceID token
-     * is initially generated so this is where you would retrieve the token.
-     */
-    // [START refresh_token]
-    @Override
-    public void onTokenRefresh() {
-        // Get updated InstanceID token.
-        String refreshedToken = FirebaseInstanceId.getInstance().getToken();
-        Log.d(TAG, "Refreshed token: " + refreshedToken);
-
-        // Notify Activity of FCM token
-        Intent intent = new Intent(ACTION_FCM_TOKEN);
-        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
-    }
-    // [END refresh_token]
-
-    /**
-     * Persist token to third-party servers.
-     *
-     * Modify this method to associate the user's FCM InstanceID token with any server-side account
-     * maintained by your application.
-     *
-     * @param token The new token.
-     */
-    private void sendRegistrationToServer(String token) {
-        // TODO: Implement this method to send token to your app server.
-    }
-}
diff --git a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java
index b50facd..64fd055 100644
--- a/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java
+++ b/node_modules/react-native-twilio-programmable-voice/android/src/main/java/com/hoxfon/react/RNTwilioVoice/fcm/VoiceFirebaseMessagingService.java
@@ -1,37 +1,40 @@
 package com.hoxfon.react.RNTwilioVoice.fcm;
 
 import android.annotation.TargetApi;
-
 import android.app.ActivityManager;
 import android.content.Intent;
-import android.os.Build;
+import android.os.Bundle;
 import android.os.Handler;
 import android.os.Looper;
-import android.support.v4.content.LocalBroadcastManager;
 import android.util.Log;
 
+import androidx.localbroadcastmanager.content.LocalBroadcastManager;
+
 import com.facebook.react.ReactApplication;
 import com.facebook.react.ReactInstanceManager;
 import com.facebook.react.bridge.ReactApplicationContext;
 import com.facebook.react.bridge.ReactContext;
-
 import com.google.firebase.messaging.FirebaseMessagingService;
 import com.google.firebase.messaging.RemoteMessage;
 import com.hoxfon.react.RNTwilioVoice.BuildConfig;
 import com.hoxfon.react.RNTwilioVoice.CallNotificationManager;
+import com.hoxfon.react.RNTwilioVoice.SoundPoolManager;
+import com.twilio.voice.CallException;
 import com.twilio.voice.CallInvite;
-import com.twilio.voice.MessageException;
+import com.twilio.voice.CancelledCallInvite;
 import com.twilio.voice.MessageListener;
 import com.twilio.voice.Voice;
 
 import java.util.Map;
 import java.util.Random;
 
-import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_CANCEL_CALL;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_FCM_TOKEN;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.ACTION_INCOMING_CALL;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.CANCELLED_CALL_INVITE;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.INCOMING_CALL_INVITE;
 import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.INCOMING_CALL_NOTIFICATION_ID;
-import com.hoxfon.react.RNTwilioVoice.SoundPoolManager;
+import static com.hoxfon.react.RNTwilioVoice.TwilioVoiceModule.TAG;
 
 public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
 
@@ -43,6 +46,16 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
         callNotificationManager = new CallNotificationManager();
     }
 
+    @Override
+    public void onNewToken(String token) {
+        Log.d(TAG, "Refreshed token: " + token);
+
+        // Notify Activity of FCM token
+        Intent intent = new Intent(ACTION_FCM_TOKEN);
+        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
+    }
+
+
     /**
      * Called when message is received.
      *
@@ -51,7 +64,9 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
     @Override
     public void onMessageReceived(RemoteMessage remoteMessage) {
         if (BuildConfig.DEBUG) {
+            Log.d(TAG, "Received onMessageReceived()");
             Log.d(TAG, "Bundle data: " + remoteMessage.getData());
+            Log.d(TAG, "From: " + remoteMessage.getFrom());
         }
 
         // Check if message contains a data payload.
@@ -62,8 +77,7 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
             Random randomNumberGenerator = new Random(System.currentTimeMillis());
             final int notificationId = randomNumberGenerator.nextInt();
 
-            Voice.handleMessage(this, data, new MessageListener() {
-
+            boolean valid = Voice.handleMessage(getApplicationContext(), data, new MessageListener() {
                 @Override
                 public void onCallInvite(final CallInvite callInvite) {
 
@@ -78,33 +92,51 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
                             ReactContext context = mReactInstanceManager.getCurrentReactContext();
                             // If it's constructed, send a notification
                             if (context != null) {
-                                int appImportance = callNotificationManager.getApplicationImportance((ReactApplicationContext)context);
+                                int appImportance = callNotificationManager.getApplicationImportance((ReactApplicationContext) context);
                                 if (BuildConfig.DEBUG) {
                                     Log.d(TAG, "CONTEXT present appImportance = " + appImportance);
                                 }
                                 Intent launchIntent = callNotificationManager.getLaunchIntent(
-                                        (ReactApplicationContext)context,
+                                        (ReactApplicationContext) context,
                                         notificationId,
                                         callInvite,
                                         false,
                                         appImportance
                                 );
+                                Intent callKeepIntent = new Intent();
+                                callKeepIntent.setAction("com.buzzwordlabs.pepper.BACKGROUND_CALL");
+                                callKeepIntent.setPackage("com.buzzwordlabs.pepper");
+                                Bundle bundle = new Bundle();
+                                bundle.putString("callState", "PENDING");
+                                bundle.putString("callSid", callInvite.getCallSid());
+                                bundle.putString("handle", callInvite.getFrom());
+                                callKeepIntent.putExtras(bundle);
+                                sendBroadcast(callKeepIntent);
                                 // app is not in foreground
                                 if (appImportance != ActivityManager.RunningAppProcessInfo.IMPORTANCE_FOREGROUND) {
-                                    context.startActivity(launchIntent);
+                                    // context.startActivity(launchIntent);
                                 }
-                                VoiceFirebaseMessagingService.this.handleIncomingCall((ReactApplicationContext)context, notificationId, callInvite, launchIntent);
+                                VoiceFirebaseMessagingService.this.handleIncomingCall((ReactApplicationContext) context, notificationId, callInvite, launchIntent);
                             } else {
                                 // Otherwise wait for construction, then handle the incoming call
                                 mReactInstanceManager.addReactInstanceEventListener(new ReactInstanceManager.ReactInstanceEventListener() {
                                     public void onReactContextInitialized(ReactContext context) {
-                                        int appImportance = callNotificationManager.getApplicationImportance((ReactApplicationContext)context);
+                                        Intent callKeepIntent = new Intent();
+                                        callKeepIntent.setAction("com.buzzwordlabs.pepper.BACKGROUND_CALL");
+                                        callKeepIntent.setPackage("com.buzzwordlabs.pepper");
+                                        Bundle bundle = new Bundle();
+                                        bundle.putString("callState", "PENDING");
+                                        bundle.putString("callSid", callInvite.getCallSid());
+                                        bundle.putString("handle", callInvite.getFrom());
+                                        callKeepIntent.putExtras(bundle);
+                                        sendBroadcast(callKeepIntent);
+                                        int appImportance = callNotificationManager.getApplicationImportance((ReactApplicationContext) context);
                                         if (BuildConfig.DEBUG) {
                                             Log.d(TAG, "CONTEXT not present appImportance = " + appImportance);
                                         }
-                                        Intent launchIntent = callNotificationManager.getLaunchIntent((ReactApplicationContext)context, notificationId, callInvite, true, appImportance);
-                                        context.startActivity(launchIntent);
-                                        VoiceFirebaseMessagingService.this.handleIncomingCall((ReactApplicationContext)context, notificationId, callInvite, launchIntent);
+                                        Intent launchIntent = callNotificationManager.getLaunchIntent((ReactApplicationContext) context, notificationId, callInvite, true, appImportance);
+                                        // context.startActivity(launchIntent);
+                                        VoiceFirebaseMessagingService.this.handleIncomingCall((ReactApplicationContext) context, notificationId, callInvite, launchIntent);
                                     }
                                 });
                                 if (!mReactInstanceManager.hasStartedCreatingInitialContext()) {
@@ -117,10 +149,32 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
                 }
 
                 @Override
-                public void onError(MessageException messageException) {
-                    Log.e(TAG, "Error handling FCM message" + messageException.toString());
+                public void onCancelledCallInvite(final CancelledCallInvite cancelledCallInvite, final CallException callException) {
+                    Handler handler = new Handler(Looper.getMainLooper());
+                    handler.post(new Runnable() {
+                        public void run() {
+                            Intent callKeepIntent = new Intent();
+                            callKeepIntent.setAction("com.buzzwordlabs.pepper.BACKGROUND_CALL");
+                            callKeepIntent.setPackage("com.buzzwordlabs.pepper");
+                            Bundle bundle = new Bundle();
+                            bundle.putString("callState", "CANCELLED");
+                            bundle.putString("callSid", cancelledCallInvite.getCallSid());
+                            bundle.putString("handle", cancelledCallInvite.getFrom());
+                            callKeepIntent.putExtras(bundle);
+                            sendBroadcast(callKeepIntent);
+                            ReactInstanceManager mReactInstanceManager = ((ReactApplication) getApplication()).getReactNativeHost().getReactInstanceManager();
+//                            ReactContext context = mReactInstanceManager.getCurrentReactContext();
+//                            VoiceFirebaseMessagingService.this.cancelNotification((ReactApplicationContext)context, cancelledCallInvite);
+                            VoiceFirebaseMessagingService.this.sendCancelledCallInviteToActivity(
+                                    cancelledCallInvite);
+                        }
+                    });
                 }
             });
+
+            if (!valid) {
+                Log.e(TAG, "Error handling FCM message");
+            }
         }
 
         // Check if message contains a notification payload.
@@ -135,7 +189,7 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
                                     Intent launchIntent
     ) {
         sendIncomingCallMessageToActivity(context, callInvite, notificationId);
-        showNotification(context, callInvite, notificationId, launchIntent);
+        // showNotification(context, callInvite, notificationId, launchIntent);
     }
 
     /*
@@ -152,6 +206,15 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
         LocalBroadcastManager.getInstance(context).sendBroadcast(intent);
     }
 
+    /*
+     * Send the CancelledCallInvite to the VoiceActivity
+     */
+    private void sendCancelledCallInviteToActivity(CancelledCallInvite cancelledCallInvite) {
+        Intent intent = new Intent(ACTION_CANCEL_CALL);
+        intent.putExtra(CANCELLED_CALL_INVITE, cancelledCallInvite);
+        LocalBroadcastManager.getInstance(this).sendBroadcast(intent);
+    }
+
     /*
      * Show the notification in the Android notification drawer
      */
@@ -161,11 +224,13 @@ public class VoiceFirebaseMessagingService extends FirebaseMessagingService {
                                   int notificationId,
                                   Intent launchIntent
     ) {
-        if (callInvite != null && callInvite.getState() == CallInvite.State.PENDING) {
-            callNotificationManager.createIncomingCallNotification(context, callInvite, notificationId, launchIntent);
-        } else {
-            SoundPoolManager.getInstance(context.getBaseContext()).stopRinging();
-            callNotificationManager.removeIncomingCallNotification(context, callInvite, 0);
-        }
+        callNotificationManager.createIncomingCallNotification(context, callInvite, notificationId, launchIntent);
     }
+
+    private void cancelNotification(ReactApplicationContext context, CancelledCallInvite cancelledCallInvite) {
+        SoundPoolManager.getInstance((this)).stopRinging();
+        callNotificationManager.removeIncomingCallNotification(context, cancelledCallInvite, 0);
+    }
+
+
 }
diff --git a/node_modules/react-native-twilio-programmable-voice/ios/RNTwilioVoice/RNTwilioVoice.m b/node_modules/react-native-twilio-programmable-voice/ios/RNTwilioVoice/RNTwilioVoice.m
index 0e0a6bf..1689493 100644
--- a/node_modules/react-native-twilio-programmable-voice/ios/RNTwilioVoice/RNTwilioVoice.m
+++ b/node_modules/react-native-twilio-programmable-voice/ios/RNTwilioVoice/RNTwilioVoice.m
@@ -14,11 +14,19 @@
 @property (nonatomic, strong) NSString *deviceTokenString;
 
 @property (nonatomic, strong) PKPushRegistry *voipRegistry;
-@property (nonatomic, strong) TVOCallInvite *callInvite;
-@property (nonatomic, strong) TVOCall *call;
+@property (nonatomic, strong) void(^incomingPushCompletionCallback)(void);
 @property (nonatomic, strong) void(^callKitCompletionCallback)(BOOL);
+@property (nonatomic, strong) TVODefaultAudioDevice *audioDevice;
+@property (nonatomic, strong) NSMutableDictionary *activeCallInvites;
+@property (nonatomic, strong) NSMutableDictionary *activeCalls;
+
+// activeCall represents the last connected call
+@property (nonatomic, strong) TVOCall *activeCall;
+
 @property (nonatomic, strong) CXProvider *callKitProvider;
 @property (nonatomic, strong) CXCallController *callKitCallController;
+@property (nonatomic, assign) BOOL userInitiatedDisconnect;
+
 @end
 
 @implementation RNTwilioVoice {
@@ -60,12 +68,14 @@ RCT_EXPORT_METHOD(initWithAccessToken:(NSString *)token) {
   _token = token;
   [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(handleAppTerminateNotification) name:UIApplicationWillTerminateNotification object:nil];
   [self initPushRegistry];
+  [self initRNTwilioVoice];
 }
 
 RCT_EXPORT_METHOD(initWithAccessTokenUrl:(NSString *)tokenUrl) {
   _tokenUrl = tokenUrl;
   [[NSNotificationCenter defaultCenter] addObserver:self selector:@selector(handleAppTerminateNotification) name:UIApplicationWillTerminateNotification object:nil];
   [self initPushRegistry];
+  [self initRNTwilioVoice];
 }
 
 RCT_EXPORT_METHOD(configureCallKit: (NSDictionary *)params) {
@@ -93,13 +103,11 @@ RCT_EXPORT_METHOD(configureCallKit: (NSDictionary *)params) {
 RCT_EXPORT_METHOD(connect: (NSDictionary *)params) {
   NSLog(@"Calling phone number %@", [params valueForKey:@"To"]);
 
-//  [TwilioVoice setLogLevel:TVOLogLevelVerbose];
-
   UIDevice* device = [UIDevice currentDevice];
   device.proximityMonitoringEnabled = YES;
 
-  if (self.call && self.call.state == TVOCallStateConnected) {
-    [self.call disconnect];
+  if (self.activeCall && self.activeCall.state == TVOCallStateConnected) {
+    [self performEndCallActionWithUUID:self.activeCall.uuid];
   } else {
     NSUUID *uuid = [NSUUID UUID];
     NSString *handle = [params valueForKey:@"To"];
@@ -110,26 +118,27 @@ RCT_EXPORT_METHOD(connect: (NSDictionary *)params) {
 
 RCT_EXPORT_METHOD(disconnect) {
   NSLog(@"Disconnecting call");
-  [self performEndCallActionWithUUID:self.call.uuid];
+  self.userInitiatedDisconnect = YES;
+  [self performEndCallActionWithUUID:self.activeCall.uuid];
 }
 
 RCT_EXPORT_METHOD(setMuted: (BOOL *)muted) {
   NSLog(@"Mute/UnMute call");
-  self.call.muted = muted;
+  self.activeCall.muted = muted;
 }
 
 RCT_EXPORT_METHOD(setSpeakerPhone: (BOOL *)speaker) {
   [self toggleAudioRoute:speaker];
 }
 
-RCT_EXPORT_METHOD(sendDigits: (NSString *)digits){
-  if (self.call && self.call.state == TVOCallStateConnected) {
+RCT_EXPORT_METHOD(sendDigits: (NSString *)digits) {
+  if (self.activeCall && self.activeCall.state == TVOCallStateConnected) {
     NSLog(@"SendDigits %@", digits);
-    [self.call sendDigits:digits];
+    [self.activeCall sendDigits:digits];
   }
 }
 
-RCT_EXPORT_METHOD(unregister){
+RCT_EXPORT_METHOD(unregister) {
   NSLog(@"unregister");
   NSString *accessToken = [self fetchAccessToken];
 
@@ -148,41 +157,36 @@ RCT_EXPORT_METHOD(unregister){
 
 RCT_REMAP_METHOD(getActiveCall,
                  resolver:(RCTPromiseResolveBlock)resolve
-                 rejecter:(RCTPromiseRejectBlock)reject){
+                 rejecter:(RCTPromiseRejectBlock)reject) {
   NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
-  if (self.callInvite) {
-    if (self.callInvite.callSid){
-      [params setObject:self.callInvite.callSid forKey:@"call_sid"];
+  if (self.activeCallInvites.count) {
+    TVOCallInvite *callInvite = [self.activeCallInvites valueForKey:[self.activeCallInvites allKeys][self.activeCallInvites.count-1]];
+    if (callInvite.callSid) {
+      [params setObject:callInvite.callSid forKey:@"call_sid"];
     }
-    if (self.callInvite.from){
-      [params setObject:self.callInvite.from forKey:@"from"];
+    if (callInvite.from) {
+      [params setObject:callInvite.from forKey:@"from"];
     }
-    if (self.callInvite.to){
-      [params setObject:self.callInvite.to forKey:@"to"];
-    }
-    if (self.callInvite.state == TVOCallInviteStatePending) {
-      [params setObject:StatePending forKey:@"call_state"];
-    } else if (self.callInvite.state == TVOCallInviteStateCanceled) {
-      [params setObject:StateDisconnected forKey:@"call_state"];
-    } else if (self.callInvite.state == TVOCallInviteStateRejected) {
-      [params setObject:StateRejected forKey:@"call_state"];
+    if (callInvite.to) {
+      [params setObject:callInvite.to forKey:@"to"];
     }
+    [params setObject:StatePending forKey:@"call_state"];
     resolve(params);
-  } else if (self.call) {
-    if (self.call.sid) {
-      [params setObject:self.call.sid forKey:@"call_sid"];
+  } else if (self.activeCall) {
+    if (self.activeCall.sid) {
+      [params setObject:self.activeCall.sid forKey:@"call_sid"];
     }
-    if (self.call.to){
-      [params setObject:self.call.to forKey:@"call_to"];
+    if (self.activeCall.to) {
+      [params setObject:self.activeCall.to forKey:@"call_to"];
     }
-    if (self.call.from){
-      [params setObject:self.call.from forKey:@"call_from"];
+    if (self.activeCall.from) {
+      [params setObject:self.activeCall.from forKey:@"call_from"];
     }
-    if (self.call.state == TVOCallStateConnected) {
+    if (self.activeCall.state == TVOCallStateConnected) {
       [params setObject:StateConnected forKey:@"call_state"];
-    } else if (self.call.state == TVOCallStateConnecting) {
+    } else if (self.activeCall.state == TVOCallStateConnecting) {
       [params setObject:StateConnecting forKey:@"call_state"];
-    } else if (self.call.state == TVOCallStateDisconnected) {
+    } else if (self.activeCall.state == TVOCallStateDisconnected) {
       [params setObject:StateDisconnected forKey:@"call_state"];
     }
     resolve(params);
@@ -191,6 +195,19 @@ RCT_REMAP_METHOD(getActiveCall,
   }
 }
 
+- (void)initRNTwilioVoice {
+    /*
+     * The important thing to remember when providing a TVOAudioDevice is that the device must be set
+     * before performing any other actions with the SDK (such as connecting a Call, or accepting an incoming Call).
+     * In this case we've already initialized our own `TVODefaultAudioDevice` instance which we will now set.
+     */
+    self.audioDevice = [TVODefaultAudioDevice audioDevice];
+    TwilioVoice.audioDevice = self.audioDevice;
+
+    self.activeCallInvites = [NSMutableDictionary dictionary];
+    self.activeCalls = [NSMutableDictionary dictionary];
+}
+
 - (void)initPushRegistry {
   self.voipRegistry = [[PKPushRegistry alloc] initWithQueue:dispatch_get_main_queue()];
   self.voipRegistry.delegate = self;
@@ -210,108 +227,149 @@ RCT_REMAP_METHOD(getActiveCall,
 
 #pragma mark - PKPushRegistryDelegate
 - (void)pushRegistry:(PKPushRegistry *)registry didUpdatePushCredentials:(PKPushCredentials *)credentials forType:(NSString *)type {
-  NSLog(@"pushRegistry:didUpdatePushCredentials:forType");
-
-  if ([type isEqualToString:PKPushTypeVoIP]) {
-    self.deviceTokenString = [credentials.token description];
-    NSString *accessToken = [self fetchAccessToken];
-
-    [TwilioVoice registerWithAccessToken:accessToken
-                                              deviceToken:self.deviceTokenString
-                                               completion:^(NSError *error) {
-                                                 if (error) {
-                                                   NSLog(@"An error occurred while registering: %@", [error localizedDescription]);
-                                                   NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
-                                                   [params setObject:[error localizedDescription] forKey:@"err"];
-
-                                                   [self sendEventWithName:@"deviceNotReady" body:params];
-                                                 } else {
-                                                   NSLog(@"Successfully registered for VoIP push notifications.");
-                                                   [self sendEventWithName:@"deviceReady" body:nil];
-                                                 }
-                                               }];
-  }
+    NSLog(@"pushRegistry:didUpdatePushCredentials:forType:");
+
+    if ([type isEqualToString:PKPushTypeVoIP]) {
+        const unsigned *tokenBytes = [credentials.token bytes];
+        self.deviceTokenString = [NSString stringWithFormat:@"<%08x %08x %08x %08x %08x %08x %08x %08x>",
+                                  ntohl(tokenBytes[0]), ntohl(tokenBytes[1]), ntohl(tokenBytes[2]),
+                                  ntohl(tokenBytes[3]), ntohl(tokenBytes[4]), ntohl(tokenBytes[5]),
+                                  ntohl(tokenBytes[6]), ntohl(tokenBytes[7])];
+        NSString *accessToken = [self fetchAccessToken];
+
+        [TwilioVoice registerWithAccessToken:accessToken
+                                 deviceToken:self.deviceTokenString
+                                  completion:^(NSError *error) {
+             if (error) {
+                 NSLog(@"An error occurred while registering: %@", [error localizedDescription]);
+                 NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
+                 [params setObject:[error localizedDescription] forKey:@"err"];
+
+                 [self sendEventWithName:@"deviceNotReady" body:params];
+             } else {
+                 NSLog(@"Successfully registered for VoIP push notifications.");
+                 [self sendEventWithName:@"deviceReady" body:nil];
+             }
+         }];
+    }
 }
 
 - (void)pushRegistry:(PKPushRegistry *)registry didInvalidatePushTokenForType:(PKPushType)type {
-  NSLog(@"pushRegistry:didInvalidatePushTokenForType");
-
-  if ([type isEqualToString:PKPushTypeVoIP]) {
-    NSString *accessToken = [self fetchAccessToken];
-
-    [TwilioVoice unregisterWithAccessToken:accessToken
-                                                deviceToken:self.deviceTokenString
-                                                 completion:^(NSError * _Nullable error) {
-                                                   if (error) {
-                                                     NSLog(@"An error occurred while unregistering: %@", [error localizedDescription]);
-                                                   } else {
-                                                     NSLog(@"Successfully unregistered for VoIP push notifications.");
-                                                   }
-                                                 }];
-
-    self.deviceTokenString = nil;
-  }
+    NSLog(@"pushRegistry:didInvalidatePushTokenForType:");
+
+    if ([type isEqualToString:PKPushTypeVoIP]) {
+        NSString *accessToken = [self fetchAccessToken];
+
+        [TwilioVoice unregisterWithAccessToken:accessToken
+                                   deviceToken:self.deviceTokenString
+                                    completion:^(NSError * _Nullable error) {
+            if (error) {
+                NSLog(@"An error occurred while unregistering: %@", [error localizedDescription]);
+            } else {
+                NSLog(@"Successfully unregistered for VoIP push notifications.");
+            }
+        }];
+
+        self.deviceTokenString = nil;
+    }
 }
 
-- (void)pushRegistry:(PKPushRegistry *)registry didReceiveIncomingPushWithPayload:(PKPushPayload *)payload forType:(NSString *)type {
-  NSLog(@"pushRegistry:didReceiveIncomingPushWithPayload:forType");
+- (void)pushRegistry:(PKPushRegistry *)registry
+didReceiveIncomingPushWithPayload:(PKPushPayload *)payload
+             forType:(PKPushType)type
+withCompletionHandler:(void (^)(void))completion {
+    NSLog(@"pushRegistry:didReceiveIncomingPushWithPayload:forType:withCompletionHandler:");
 
-  if ([type isEqualToString:PKPushTypeVoIP]) {
-    [TwilioVoice handleNotification:payload.dictionaryPayload
-                                            delegate:self];
-  }
+    if ([type isEqualToString:PKPushTypeVoIP]) {
+        // The Voice SDK will use main queue to invoke `cancelledCallInviteReceived:error` when delegate queue is not passed
+        if (![TwilioVoice handleNotification:payload.dictionaryPayload delegate:self delegateQueue:nil]) {
+            NSLog(@"This is not a valid Twilio Voice notification.");
+        }
+    }
+    if ([[NSProcessInfo processInfo] operatingSystemVersion].majorVersion < 13) {
+        // Save for later when the notification is properly handled.
+        self.incomingPushCompletionCallback = completion;
+    } else {
+        /**
+        * The Voice SDK processes the call notification and returns the call invite synchronously. Report the incoming call to
+        * CallKit and fulfill the completion before exiting this callback method.
+        */
+        completion();
+    }
+}
+
+- (void)incomingPushHandled {
+    if (self.incomingPushCompletionCallback) {
+        self.incomingPushCompletionCallback();
+        self.incomingPushCompletionCallback = nil;
+    }
 }
 
 #pragma mark - TVONotificationDelegate
 - (void)callInviteReceived:(TVOCallInvite *)callInvite {
-    if (callInvite.state == TVOCallInviteStatePending) {
-      [self handleCallInviteReceived:callInvite];
-    } else if (callInvite.state == TVOCallInviteStateCanceled) {
-      [self handleCallInviteCanceled:callInvite];
-    }
-}
-
-- (void)handleCallInviteReceived:(TVOCallInvite *)callInvite {
-  NSLog(@"callInviteReceived:");
-  if (self.callInvite && self.callInvite == TVOCallInviteStatePending) {
-    NSLog(@"Already a pending incoming call invite.");
-    NSLog(@"  >> Ignoring call from %@", callInvite.from);
-    return;
-  } else if (self.call) {
-    NSLog(@"Already an active call.");
-    NSLog(@"  >> Ignoring call from %@", callInvite.from);
-    return;
-  }
 
-  self.callInvite = callInvite;
+    /**
+     * Calling `[TwilioVoice handleNotification:delegate:]` will synchronously process your notification payload and
+     * provide you a `TVOCallInvite` object. Report the incoming call to CallKit upon receiving this callback.
+     */
+
+    NSLog(@"callInviteReceived:");
 
-  [self reportIncomingCallFrom:callInvite.from withUUID:callInvite.uuid];
+    NSString *from = @"Voice Bot";
+    if (callInvite.from) {
+        from = [callInvite.from stringByReplacingOccurrencesOfString:@"client:" withString:@""];
+    }
+
+    // Always report to CallKit
+    [self reportIncomingCallFrom:from withUUID:callInvite.uuid];
+    self.activeCallInvites[[callInvite.uuid UUIDString]] = callInvite;
+    if ([[NSProcessInfo processInfo] operatingSystemVersion].majorVersion < 13) {
+        [self incomingPushHandled];
+    }
 }
 
-- (void)handleCallInviteCanceled:(TVOCallInvite *)callInvite {
-  NSLog(@"callInviteCanceled");
+- (void)cancelledCallInviteReceived:(TVOCancelledCallInvite *)cancelledCallInvite error:(NSError *)error {
 
-  [self performEndCallActionWithUUID:callInvite.uuid];
+    /**
+     * The SDK may call `[TVONotificationDelegate callInviteReceived:error:]` asynchronously on the dispatch queue
+     * with a `TVOCancelledCallInvite` if the caller hangs up or the client encounters any other error before the called
+     * party could answer or reject the call.
+     */
 
-  NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
-  if (self.callInvite.callSid){
-    [params setObject:self.callInvite.callSid forKey:@"call_sid"];
-  }
+    NSLog(@"cancelledCallInviteReceived:");
 
-  if (self.callInvite.from){
-    [params setObject:self.callInvite.from forKey:@"from"];
-  }
-  if (self.callInvite.to){
-    [params setObject:self.callInvite.to forKey:@"to"];
-  }
-  if (self.callInvite.state == TVOCallInviteStateCanceled) {
-    [params setObject:StateDisconnected forKey:@"call_state"];
-  } else if (self.callInvite.state == TVOCallInviteStateRejected) {
-    [params setObject:StateRejected forKey:@"call_state"];
-  }
-  [self sendEventWithName:@"connectionDidDisconnect" body:params];
+    TVOCallInvite *callInvite;
+    for (NSString *activeCallInviteId in self.activeCallInvites) {
+        TVOCallInvite *activeCallInvite = [self.activeCallInvites objectForKey:activeCallInviteId];
+        if ([cancelledCallInvite.callSid isEqualToString:activeCallInvite.callSid]) {
+            callInvite = activeCallInvite;
+            break;
+        }
+    }
 
-  self.callInvite = nil;
+    if (callInvite) {
+        [self performEndCallActionWithUUID:callInvite.uuid];
+
+        NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
+        if (callInvite.callSid) {
+          [params setObject:callInvite.callSid forKey:@"call_sid"];
+        }
+
+        if (callInvite.from) {
+          [params setObject:callInvite.from forKey:@"call_from"];
+        }
+        if (callInvite.to) {
+          [params setObject:callInvite.to forKey:@"call_to"];
+        }
+
+        if (error.code == TVOErrorCallCancelledError) {
+            [params setObject:StateDisconnected forKey:@"call_state"];
+        } else {
+            [params setObject:StateRejected forKey:@"call_state"];
+        }
+
+        [self sendEventWithName:@"connectionDidDisconnect" body:params];
+    }
 }
 
 - (void)notificationError:(NSError *)error {
@@ -320,93 +378,117 @@ RCT_REMAP_METHOD(getActiveCall,
 
 #pragma mark - TVOCallDelegate
 - (void)callDidConnect:(TVOCall *)call {
-  self.call = call;
-  self.callKitCompletionCallback(YES);
-  self.callKitCompletionCallback = nil;
-
-  NSMutableDictionary *callParams = [[NSMutableDictionary alloc] init];
-  [callParams setObject:call.sid forKey:@"call_sid"];
-  if (call.state == TVOCallStateConnecting) {
-    [callParams setObject:StateConnecting forKey:@"call_state"];
-  } else if (call.state == TVOCallStateConnected) {
-    [callParams setObject:StateConnected forKey:@"call_state"];
-  }
+    NSLog(@"callDidConnect:");
+    self.activeCall = call;
+    self.callKitCompletionCallback(YES);
+    self.callKitCompletionCallback = nil;
 
-  if (call.from){
-    [callParams setObject:call.from forKey:@"from"];
-  }
-  if (call.to){
-    [callParams setObject:call.to forKey:@"to"];
-  }
-  [self sendEventWithName:@"connectionDidConnect" body:callParams];
+
+    // self.callKitCompletionCallback(YES);
+
+    NSMutableDictionary *callParams = [[NSMutableDictionary alloc] init];
+    [callParams setObject:call.sid forKey:@"call_sid"];
+    if (call.state == TVOCallStateConnecting) {
+      [callParams setObject:StateConnecting forKey:@"call_state"];
+    } else if (call.state == TVOCallStateConnected) {
+      [callParams setObject:StateConnected forKey:@"call_state"];
+    }
+
+    if (call.from) {
+      [callParams setObject:call.from forKey:@"call_from"];
+    }
+    if (call.to) {
+      [callParams setObject:call.to forKey:@"call_to"];
+    }
+    NSLog(@"CONNECTION DID CONNECT");
+    [self sendEventWithName:@"connectionDidConnect" body:callParams];
 }
 
 - (void)call:(TVOCall *)call didFailToConnectWithError:(NSError *)error {
-  NSLog(@"Call failed to connect: %@", error);
+    NSLog(@"Call failed to connect: %@", error);
 
-  self.callKitCompletionCallback(NO);
-  [self performEndCallActionWithUUID:call.uuid];
-  [self callDisconnected:error];
+    self.callKitCompletionCallback(NO);
+    [self performEndCallActionWithUUID:call.uuid];
+    [self call:call disconnectedWithError:error];
 }
 
 - (void)call:(TVOCall *)call didDisconnectWithError:(NSError *)error {
-  NSLog(@"Call disconnected with error: %@", error);
+    if (error) {
+        NSLog(@"Call failed: %@", error);
+    } else {
+        NSLog(@"Call disconnected");
+    }
 
-  [self performEndCallActionWithUUID:call.uuid];
-  [self callDisconnected:error];
-}
+    if (!self.userInitiatedDisconnect) {
+        CXCallEndedReason reason = CXCallEndedReasonRemoteEnded;
+        if (error) {
+            reason = CXCallEndedReasonFailed;
+        }
 
-- (void)callDisconnected:(NSError *)error {
-  NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
-  if (error) {
-    NSString* errMsg = [error localizedDescription];
-    if (error.localizedFailureReason) {
-      errMsg = [error localizedFailureReason];
+        [self.callKitProvider reportCallWithUUID:call.uuid endedAtDate:[NSDate date] reason:reason];
     }
-    [params setObject:errMsg forKey:@"error"];
-  }
-  if (self.call.sid) {
-    [params setObject:self.call.sid forKey:@"call_sid"];
-  }
-  if (self.call.to){
-    [params setObject:self.call.to forKey:@"call_to"];
-  }
-  if (self.call.from){
-    [params setObject:self.call.from forKey:@"call_from"];
-  }
-  if (self.call.state == TVOCallStateDisconnected) {
-    [params setObject:StateDisconnected forKey:@"call_state"];
-  }
-  [self sendEventWithName:@"connectionDidDisconnect" body:params];
 
-  self.call = nil;
-  self.callKitCompletionCallback = nil;
+    [self call:call disconnectedWithError:error];
 }
 
-#pragma mark - AVAudioSession
-- (void)toggleAudioRoute: (BOOL *)toSpeaker {
-  // The mode set by the Voice SDK is "VoiceChat" so the default audio route is the built-in receiver.
-  // Use port override to switch the route.
-  NSError *error = nil;
-  NSLog(@"toggleAudioRoute");
+- (void)call:(TVOCall *)call disconnectedWithError:(NSError *)error {
+    if ([call isEqual:self.activeCall]) {
+        self.activeCall = nil;
+    }
+    [self.activeCalls removeObjectForKey:call.uuid.UUIDString];
 
-  if (toSpeaker) {
-    if (![[AVAudioSession sharedInstance] overrideOutputAudioPort:AVAudioSessionPortOverrideSpeaker
-                                                            error:&error]) {
-      NSLog(@"Unable to reroute audio: %@", [error localizedDescription]);
+    self.userInitiatedDisconnect = NO;
+
+    NSMutableDictionary *params = [[NSMutableDictionary alloc] init];
+    if (error) {
+        NSString* errMsg = [error localizedDescription];
+        if (error.localizedFailureReason) {
+          errMsg = [error localizedFailureReason];
+        }
+        [params setObject:errMsg forKey:@"err"];
     }
-  } else {
-    if (![[AVAudioSession sharedInstance] overrideOutputAudioPort:AVAudioSessionPortOverrideNone
-                                                            error:&error]) {
-      NSLog(@"Unable to reroute audio: %@", [error localizedDescription]);
+    if (call.sid) {
+        [params setObject:call.sid forKey:@"call_sid"];
     }
-  }
+    if (call.to) {
+        [params setObject:call.to forKey:@"call_to"];
+    }
+    if (call.from) {
+        [params setObject:call.from forKey:@"call_from"];
+    }
+    if (call.state == TVOCallStateDisconnected) {
+        [params setObject:StateDisconnected forKey:@"call_state"];
+    }
+    [self sendEventWithName:@"connectionDidDisconnect" body:params];
+}
+
+#pragma mark - AVAudioSession
+- (void)toggleAudioRoute:(BOOL)toSpeaker {
+    // The mode set by the Voice SDK is "VoiceChat" so the default audio route is the built-in receiver. Use port override to switch the route.
+    self.audioDevice.block =  ^ {
+        // We will execute `kDefaultAVAudioSessionConfigurationBlock` first.
+        kTVODefaultAVAudioSessionConfigurationBlock();
+
+        // Overwrite the audio route
+        AVAudioSession *session = [AVAudioSession sharedInstance];
+        NSError *error = nil;
+        if (toSpeaker) {
+            if (![session overrideOutputAudioPort:AVAudioSessionPortOverrideSpeaker error:&error]) {
+                NSLog(@"Unable to reroute audio: %@", [error localizedDescription]);
+            }
+        } else {
+            if (![session overrideOutputAudioPort:AVAudioSessionPortOverrideNone error:&error]) {
+                NSLog(@"Unable to reroute audio: %@", [error localizedDescription]);
+            }
+        }
+    };
+    self.audioDevice.block();
 }
 
 #pragma mark - CXProviderDelegate
 - (void)providerDidReset:(CXProvider *)provider {
-  NSLog(@"providerDidReset");
-  TwilioVoice.audioEnabled = YES;
+    NSLog(@"providerDidReset:");
+    self.audioDevice.enabled = YES;
 }
 
 - (void)providerDidBegin:(CXProvider *)provider {
@@ -414,13 +496,12 @@ RCT_REMAP_METHOD(getActiveCall,
 }
 
 - (void)provider:(CXProvider *)provider didActivateAudioSession:(AVAudioSession *)audioSession {
-  NSLog(@"provider:didActivateAudioSession");
-  TwilioVoice.audioEnabled = YES;
+    NSLog(@"provider:didActivateAudioSession:");
+    self.audioDevice.enabled = YES;
 }
 
 - (void)provider:(CXProvider *)provider didDeactivateAudioSession:(AVAudioSession *)audioSession {
-  NSLog(@"provider:didDeactivateAudioSession");
-  TwilioVoice.audioEnabled = NO;
+    NSLog(@"provider:didDeactivateAudioSession:");
 }
 
 - (void)provider:(CXProvider *)provider timedOutPerformingAction:(CXAction *)action {
@@ -428,170 +509,206 @@ RCT_REMAP_METHOD(getActiveCall,
 }
 
 - (void)provider:(CXProvider *)provider performStartCallAction:(CXStartCallAction *)action {
-  NSLog(@"provider:performStartCallAction");
+    NSLog(@"provider:performStartCallAction:");
 
-  [TwilioVoice configureAudioSession];
-  TwilioVoice.audioEnabled = NO;
+    self.audioDevice.enabled = NO;
+    self.audioDevice.block();
 
-  [self.callKitProvider reportOutgoingCallWithUUID:action.callUUID startedConnectingAtDate:[NSDate date]];
+    [self.callKitProvider reportOutgoingCallWithUUID:action.callUUID startedConnectingAtDate:[NSDate date]];
 
-  __weak typeof(self) weakSelf = self;
-  [self performVoiceCallWithUUID:action.callUUID client:nil completion:^(BOOL success) {
-    __strong typeof(self) strongSelf = weakSelf;
-    if (success) {
-      [strongSelf.callKitProvider reportOutgoingCallWithUUID:action.callUUID connectedAtDate:[NSDate date]];
-      [action fulfill];
-    } else {
-      [action fail];
-    }
-  }];
+    __weak typeof(self) weakSelf = self;
+    [self performVoiceCallWithUUID:action.callUUID client:nil completion:^(BOOL success) {
+        __strong typeof(self) strongSelf = weakSelf;
+        if (success) {
+            [strongSelf.callKitProvider reportOutgoingCallWithUUID:action.callUUID connectedAtDate:[NSDate date]];
+            [action fulfill];
+        } else {
+            [action fail];
+        }
+    }];
 }
 
 - (void)provider:(CXProvider *)provider performAnswerCallAction:(CXAnswerCallAction *)action {
-  NSLog(@"provider:performAnswerCallAction");
+    NSLog(@"provider:performAnswerCallAction:");
 
-  // RCP: Workaround from https://forums.developer.apple.com/message/169511 suggests configuring audio in the
-  //      completion block of the `reportNewIncomingCallWithUUID:update:completion:` method instead of in
-  //      `provider:performAnswerCallAction:` per the WWDC examples.
-  // [TwilioVoice configureAudioSession];
+    self.audioDevice.enabled = NO;
+    self.audioDevice.block();
 
-  NSAssert([self.callInvite.uuid isEqual:action.callUUID], @"We only support one Invite at a time.");
+    [self performAnswerVoiceCallWithUUID:action.callUUID completion:^(BOOL success) {
+        if (success) {
+            [action fulfill];
+        } else {
+            [action fail];
+        }
+    }];
 
-  TwilioVoice.audioEnabled = NO;
-  [self performAnswerVoiceCallWithUUID:action.callUUID completion:^(BOOL success) {
-    if (success) {
-      [action fulfill];
-    } else {
-      [action fail];
-    }
-  }];
-
-  [action fulfill];
+    [action fulfill];
 }
 
 - (void)provider:(CXProvider *)provider performEndCallAction:(CXEndCallAction *)action {
-  NSLog(@"provider:performEndCallAction");
+    NSLog(@"provider:performEndCallAction:");
 
-  TwilioVoice.audioEnabled = NO;
+    TVOCallInvite *callInvite = self.activeCallInvites[action.callUUID.UUIDString];
+    TVOCall *call = self.activeCalls[action.callUUID.UUIDString];
 
-  if (self.callInvite && self.callInvite.state == TVOCallInviteStatePending) {
-    [self sendEventWithName:@"callRejected" body:@"callRejected"];
-    [self.callInvite reject];
-    self.callInvite = nil;
-  } else if (self.call) {
-    [self.call disconnect];
-  }
+    if (callInvite) {
+        [callInvite reject];
+        [self.activeCallInvites removeObjectForKey:callInvite.uuid.UUIDString];
+    } else if (call) {
+        [call disconnect];
+    } else {
+        NSLog(@"Unknown UUID to perform end-call action with");
+    }
 
-  [action fulfill];
+    self.audioDevice.enabled = YES;
+    [action fulfill];
 }
 
 - (void)provider:(CXProvider *)provider performSetHeldCallAction:(CXSetHeldCallAction *)action {
-  if (self.call && self.call.state == TVOCallStateConnected) {
-    [self.call setOnHold:action.isOnHold];
-    [action fulfill];
-  } else {
-    [action fail];
-  }
+    TVOCall *call = self.activeCalls[action.callUUID.UUIDString];
+    if (call) {
+        [call setOnHold:action.isOnHold];
+        [action fulfill];
+    } else {
+        [action fail];
+    }
 }
 
-#pragma mark - CallKit Actions
-- (void)performStartCallActionWithUUID:(NSUUID *)uuid handle:(NSString *)handle {
-  if (uuid == nil || handle == nil) {
-    return;
-  }
-
-  CXHandle *callHandle = [[CXHandle alloc] initWithType:CXHandleTypeGeneric value:handle];
-  CXStartCallAction *startCallAction = [[CXStartCallAction alloc] initWithCallUUID:uuid handle:callHandle];
-  CXTransaction *transaction = [[CXTransaction alloc] initWithAction:startCallAction];
-
-  [self.callKitCallController requestTransaction:transaction completion:^(NSError *error) {
-    if (error) {
-      NSLog(@"StartCallAction transaction request failed: %@", [error localizedDescription]);
+- (void)provider:(CXProvider *)provider performSetMutedCallAction:(CXSetMutedCallAction *)action {
+    TVOCall *call = self.activeCalls[action.callUUID.UUIDString];
+    if (call) {
+        [call setMuted:action.isMuted];
+        [action fulfill];
     } else {
-      NSLog(@"StartCallAction transaction request successful");
-
-      CXCallUpdate *callUpdate = [[CXCallUpdate alloc] init];
-      callUpdate.remoteHandle = callHandle;
-      callUpdate.supportsDTMF = YES;
-      callUpdate.supportsHolding = YES;
-      callUpdate.supportsGrouping = NO;
-      callUpdate.supportsUngrouping = NO;
-      callUpdate.hasVideo = NO;
-
-      [self.callKitProvider reportCallWithUUID:uuid updated:callUpdate];
+        [action fail];
     }
-  }];
 }
 
-- (void)reportIncomingCallFrom:(NSString *)from withUUID:(NSUUID *)uuid {
-  CXHandle *callHandle = [[CXHandle alloc] initWithType:CXHandleTypeGeneric value:from];
-
-  CXCallUpdate *callUpdate = [[CXCallUpdate alloc] init];
-  callUpdate.remoteHandle = callHandle;
-  callUpdate.supportsDTMF = YES;
-  callUpdate.supportsHolding = YES;
-  callUpdate.supportsGrouping = NO;
-  callUpdate.supportsUngrouping = NO;
-  callUpdate.hasVideo = NO;
-
-  [self.callKitProvider reportNewIncomingCallWithUUID:uuid update:callUpdate completion:^(NSError *error) {
-    if (!error) {
-      NSLog(@"Incoming call successfully reported");
-
-      // RCP: Workaround per https://forums.developer.apple.com/message/169511
-      [TwilioVoice configureAudioSession];
-    } else {
-      NSLog(@"Failed to report incoming call successfully: %@.", [error localizedDescription]);
+#pragma mark - CallKit Actions
+- (void)performStartCallActionWithUUID:(NSUUID *)uuid handle:(NSString *)handle {
+    if (uuid == nil || handle == nil) {
+        return;
     }
-  }];
+
+    CXHandle *callHandle = [[CXHandle alloc] initWithType:CXHandleTypeGeneric value:handle];
+    CXStartCallAction *startCallAction = [[CXStartCallAction alloc] initWithCallUUID:uuid handle:callHandle];
+    CXTransaction *transaction = [[CXTransaction alloc] initWithAction:startCallAction];
+
+    [self.callKitCallController requestTransaction:transaction completion:^(NSError *error) {
+        if (error) {
+            NSLog(@"StartCallAction transaction request failed: %@", [error localizedDescription]);
+        } else {
+            NSLog(@"StartCallAction transaction request successful");
+
+            CXCallUpdate *callUpdate = [[CXCallUpdate alloc] init];
+            callUpdate.remoteHandle = callHandle;
+            callUpdate.supportsDTMF = YES;
+            callUpdate.supportsHolding = YES;
+            callUpdate.supportsGrouping = NO;
+            callUpdate.supportsUngrouping = NO;
+            callUpdate.hasVideo = NO;
+
+            [self.callKitProvider reportCallWithUUID:uuid updated:callUpdate];
+        }
+    }];
+}
+
+- (void)reportIncomingCallFrom:(NSString *) from withUUID:(NSUUID *)uuid {
+    CXHandle *callHandle = [[CXHandle alloc] initWithType:CXHandleTypeGeneric value:from];
+
+    CXCallUpdate *callUpdate = [[CXCallUpdate alloc] init];
+    // Keep in mind that there will be bugs if a contact name includes 'client:' in itself (though it's very unlikely this will ever happen)
+    NSArray *lines = [from componentsSeparatedByString: @"client:"];
+    NSMutableString *newCallerId = [lines lastObject];
+    // Since newCallerId uses "737737" instead of spaces, replace as needed
+    newCallerId = [newCallerId stringByReplacingOccurrencesOfString:@"737737" withString:@" "];
+    callUpdate.localizedCallerName = newCallerId;
+    callUpdate.remoteHandle = callHandle;
+    callUpdate.supportsDTMF = YES;
+    callUpdate.supportsHolding = YES;
+    callUpdate.supportsGrouping = NO;
+    callUpdate.supportsUngrouping = NO;
+    callUpdate.hasVideo = NO;
+
+    [self.callKitProvider reportNewIncomingCallWithUUID:uuid update:callUpdate completion:^(NSError *error) {
+        if (!error) {
+            NSLog(@"Incoming call successfully reported.");
+        } else {
+            NSLog(@"Failed to report incoming call successfully: %@.", [error localizedDescription]);
+        }
+    }];
 }
 
 - (void)performEndCallActionWithUUID:(NSUUID *)uuid {
-  if (uuid == nil) {
-    return;
-  }
+    if (uuid == nil) {
+      return;
+    }
 
-  UIDevice* device = [UIDevice currentDevice];
-  device.proximityMonitoringEnabled = NO;
+    UIDevice* device = [UIDevice currentDevice];
+    device.proximityMonitoringEnabled = NO;
 
-  CXEndCallAction *endCallAction = [[CXEndCallAction alloc] initWithCallUUID:uuid];
-  CXTransaction *transaction = [[CXTransaction alloc] initWithAction:endCallAction];
+    CXEndCallAction *endCallAction = [[CXEndCallAction alloc] initWithCallUUID:uuid];
+    CXTransaction *transaction = [[CXTransaction alloc] initWithAction:endCallAction];
 
-  [self.callKitCallController requestTransaction:transaction completion:^(NSError *error) {
-    if (error) {
-      NSLog(@"EndCallAction transaction request failed: %@", [error localizedDescription]);
-    } else {
-      NSLog(@"EndCallAction transaction request successful");
-    }
-  }];
+    [self.callKitCallController requestTransaction:transaction completion:^(NSError *error) {
+        if (error) {
+            NSLog(@"EndCallAction transaction request failed: %@", [error localizedDescription]);
+        }
+        else {
+            NSLog(@"EndCallAction transaction request successful");
+        }
+    }];
 }
 
 - (void)performVoiceCallWithUUID:(NSUUID *)uuid
                           client:(NSString *)client
                       completion:(void(^)(BOOL success))completionHandler {
-
-    self.call = [TwilioVoice call:[self fetchAccessToken]
-                                            params:_callParams
-                                              uuid:uuid
-                                          delegate:self];
-
+    __weak typeof(self) weakSelf = self;
+    TVOConnectOptions *connectOptions = [TVOConnectOptions optionsWithAccessToken:[self fetchAccessToken] block:^(TVOConnectOptionsBuilder *builder) {
+        __strong typeof(self) strongSelf = weakSelf;
+        builder.params = strongSelf->_callParams;
+        builder.uuid = uuid;
+    }];
+    TVOCall *call = [TwilioVoice connectWithOptions:connectOptions delegate:self];
+    if (call) {
+        self.activeCall = call;
+        self.activeCalls[call.uuid.UUIDString] = call;
+    }
     self.callKitCompletionCallback = completionHandler;
 }
 
 - (void)performAnswerVoiceCallWithUUID:(NSUUID *)uuid
                             completion:(void(^)(BOOL success))completionHandler {
+    TVOCallInvite *callInvite = self.activeCallInvites[uuid.UUIDString];
+    NSAssert(callInvite, @"No CallInvite matches the UUID");
 
-    self.call = [self.callInvite acceptWithDelegate:self];
-    self.callInvite = nil;
-    self.callKitCompletionCallback = completionHandler;
+    TVOAcceptOptions *acceptOptions = [TVOAcceptOptions optionsWithCallInvite:callInvite block:^(TVOAcceptOptionsBuilder *builder) {
+        builder.uuid = callInvite.uuid;
+    }];
+
+    TVOCall *call = [callInvite acceptWithOptions:acceptOptions delegate:self];
+
+    if (!call) {
+        completionHandler(NO);
+    } else {
+        self.callKitCompletionCallback = completionHandler;
+        self.activeCall = call;
+        self.activeCalls[call.uuid.UUIDString] = call;
+    }
+
+    [self.activeCallInvites removeObjectForKey:callInvite.uuid.UUIDString];
+
+    if ([[NSProcessInfo processInfo] operatingSystemVersion].majorVersion < 13) {
+        [self incomingPushHandled];
+    }
 }
 
 - (void)handleAppTerminateNotification {
   NSLog(@"handleAppTerminateNotification called");
 
-  if (self.call) {
+  if (self.activeCall) {
     NSLog(@"handleAppTerminateNotification disconnecting an active call");
-    [self.call disconnect];
+    [self.activeCall disconnect];
   }
 }
 
